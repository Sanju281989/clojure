{
"version":3,
"file":"module$node_modules$crypto_js$enc_utf16.js",
"lineCount":3,
"mappings":"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",
"sources":["node_modules/crypto-js/enc-utf16.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$crypto_js$enc_utf16\"] = function(global,require,module,exports) {\n;(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_enc = C.enc;\n\n\t    /**\n\t     * UTF-16 BE encoding strategy.\n\t     */\n\t    var Utf16BE = C_enc.Utf16 = C_enc.Utf16BE = {\n\t        /**\n\t         * Converts a word array to a UTF-16 BE string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-16 BE string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf16String = CryptoJS.enc.Utf16.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var utf16Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 2) {\n\t                var codePoint = (words[i >>> 2] >>> (16 - (i % 4) * 8)) & 0xffff;\n\t                utf16Chars.push(String.fromCharCode(codePoint));\n\t            }\n\n\t            return utf16Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a UTF-16 BE string to a word array.\n\t         *\n\t         * @param {string} utf16Str The UTF-16 BE string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf16.parse(utf16String);\n\t         */\n\t        parse: function (utf16Str) {\n\t            // Shortcut\n\t            var utf16StrLength = utf16Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < utf16StrLength; i++) {\n\t                words[i >>> 1] |= utf16Str.charCodeAt(i) << (16 - (i % 2) * 16);\n\t            }\n\n\t            return WordArray.create(words, utf16StrLength * 2);\n\t        }\n\t    };\n\n\t    /**\n\t     * UTF-16 LE encoding strategy.\n\t     */\n\t    C_enc.Utf16LE = {\n\t        /**\n\t         * Converts a word array to a UTF-16 LE string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-16 LE string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf16Str = CryptoJS.enc.Utf16LE.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var utf16Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 2) {\n\t                var codePoint = swapEndian((words[i >>> 2] >>> (16 - (i % 4) * 8)) & 0xffff);\n\t                utf16Chars.push(String.fromCharCode(codePoint));\n\t            }\n\n\t            return utf16Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a UTF-16 LE string to a word array.\n\t         *\n\t         * @param {string} utf16Str The UTF-16 LE string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf16LE.parse(utf16Str);\n\t         */\n\t        parse: function (utf16Str) {\n\t            // Shortcut\n\t            var utf16StrLength = utf16Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < utf16StrLength; i++) {\n\t                words[i >>> 1] |= swapEndian(utf16Str.charCodeAt(i) << (16 - (i % 2) * 16));\n\t            }\n\n\t            return WordArray.create(words, utf16StrLength * 2);\n\t        }\n\t    };\n\n\t    function swapEndian(word) {\n\t        return ((word << 8) & 0xff00ff00) | ((word >>> 8) & 0x00ff00ff);\n\t    }\n\t}());\n\n\n\treturn CryptoJS.enc.Utf16;\n\n}));\n};"],
"names":["shadow$provide","global","require","module","exports","root","factory","define","amd","CryptoJS","swapEndian","word","WordArray","lib","C_enc","enc","Utf16","Utf16BE","stringify","wordArray","words","sigBytes","utf16Chars","i","push","String","fromCharCode","join","parse","utf16Str","utf16StrLength","length","charCodeAt","create","Utf16LE","codePoint"]
}
