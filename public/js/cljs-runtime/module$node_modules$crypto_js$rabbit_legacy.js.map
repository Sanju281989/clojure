{
"version":3,
"file":"module$node_modules$crypto_js$rabbit_legacy.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/crypto-js/rabbit-legacy.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$crypto_js$rabbit_legacy\"] = function(global,require,module,exports) {\n;(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var StreamCipher = C_lib.StreamCipher;\n\t    var C_algo = C.algo;\n\n\t    // Reusable objects\n\t    var S  = [];\n\t    var C_ = [];\n\t    var G  = [];\n\n\t    /**\n\t     * Rabbit stream cipher algorithm.\n\t     *\n\t     * This is a legacy version that neglected to convert the key to little-endian.\n\t     * This error doesn't affect the cipher's security,\n\t     * but it does affect its compatibility with other implementations.\n\t     */\n\t    var RabbitLegacy = C_algo.RabbitLegacy = StreamCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var K = this._key.words;\n\t            var iv = this.cfg.iv;\n\n\t            // Generate initial state values\n\t            var X = this._X = [\n\t                K[0], (K[3] << 16) | (K[2] >>> 16),\n\t                K[1], (K[0] << 16) | (K[3] >>> 16),\n\t                K[2], (K[1] << 16) | (K[0] >>> 16),\n\t                K[3], (K[2] << 16) | (K[1] >>> 16)\n\t            ];\n\n\t            // Generate initial counter values\n\t            var C = this._C = [\n\t                (K[2] << 16) | (K[2] >>> 16), (K[0] & 0xffff0000) | (K[1] & 0x0000ffff),\n\t                (K[3] << 16) | (K[3] >>> 16), (K[1] & 0xffff0000) | (K[2] & 0x0000ffff),\n\t                (K[0] << 16) | (K[0] >>> 16), (K[2] & 0xffff0000) | (K[3] & 0x0000ffff),\n\t                (K[1] << 16) | (K[1] >>> 16), (K[3] & 0xffff0000) | (K[0] & 0x0000ffff)\n\t            ];\n\n\t            // Carry bit\n\t            this._b = 0;\n\n\t            // Iterate the system four times\n\t            for (var i = 0; i < 4; i++) {\n\t                nextState.call(this);\n\t            }\n\n\t            // Modify the counters\n\t            for (var i = 0; i < 8; i++) {\n\t                C[i] ^= X[(i + 4) & 7];\n\t            }\n\n\t            // IV setup\n\t            if (iv) {\n\t                // Shortcuts\n\t                var IV = iv.words;\n\t                var IV_0 = IV[0];\n\t                var IV_1 = IV[1];\n\n\t                // Generate four subvectors\n\t                var i0 = (((IV_0 << 8) | (IV_0 >>> 24)) & 0x00ff00ff) | (((IV_0 << 24) | (IV_0 >>> 8)) & 0xff00ff00);\n\t                var i2 = (((IV_1 << 8) | (IV_1 >>> 24)) & 0x00ff00ff) | (((IV_1 << 24) | (IV_1 >>> 8)) & 0xff00ff00);\n\t                var i1 = (i0 >>> 16) | (i2 & 0xffff0000);\n\t                var i3 = (i2 << 16)  | (i0 & 0x0000ffff);\n\n\t                // Modify counter values\n\t                C[0] ^= i0;\n\t                C[1] ^= i1;\n\t                C[2] ^= i2;\n\t                C[3] ^= i3;\n\t                C[4] ^= i0;\n\t                C[5] ^= i1;\n\t                C[6] ^= i2;\n\t                C[7] ^= i3;\n\n\t                // Iterate the system four times\n\t                for (var i = 0; i < 4; i++) {\n\t                    nextState.call(this);\n\t                }\n\t            }\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var X = this._X;\n\n\t            // Iterate the system\n\t            nextState.call(this);\n\n\t            // Generate four keystream words\n\t            S[0] = X[0] ^ (X[5] >>> 16) ^ (X[3] << 16);\n\t            S[1] = X[2] ^ (X[7] >>> 16) ^ (X[5] << 16);\n\t            S[2] = X[4] ^ (X[1] >>> 16) ^ (X[7] << 16);\n\t            S[3] = X[6] ^ (X[3] >>> 16) ^ (X[1] << 16);\n\n\t            for (var i = 0; i < 4; i++) {\n\t                // Swap endian\n\t                S[i] = (((S[i] << 8)  | (S[i] >>> 24)) & 0x00ff00ff) |\n\t                       (((S[i] << 24) | (S[i] >>> 8))  & 0xff00ff00);\n\n\t                // Encrypt\n\t                M[offset + i] ^= S[i];\n\t            }\n\t        },\n\n\t        blockSize: 128/32,\n\n\t        ivSize: 64/32\n\t    });\n\n\t    function nextState() {\n\t        // Shortcuts\n\t        var X = this._X;\n\t        var C = this._C;\n\n\t        // Save old counter values\n\t        for (var i = 0; i < 8; i++) {\n\t            C_[i] = C[i];\n\t        }\n\n\t        // Calculate new counter values\n\t        C[0] = (C[0] + 0x4d34d34d + this._b) | 0;\n\t        C[1] = (C[1] + 0xd34d34d3 + ((C[0] >>> 0) < (C_[0] >>> 0) ? 1 : 0)) | 0;\n\t        C[2] = (C[2] + 0x34d34d34 + ((C[1] >>> 0) < (C_[1] >>> 0) ? 1 : 0)) | 0;\n\t        C[3] = (C[3] + 0x4d34d34d + ((C[2] >>> 0) < (C_[2] >>> 0) ? 1 : 0)) | 0;\n\t        C[4] = (C[4] + 0xd34d34d3 + ((C[3] >>> 0) < (C_[3] >>> 0) ? 1 : 0)) | 0;\n\t        C[5] = (C[5] + 0x34d34d34 + ((C[4] >>> 0) < (C_[4] >>> 0) ? 1 : 0)) | 0;\n\t        C[6] = (C[6] + 0x4d34d34d + ((C[5] >>> 0) < (C_[5] >>> 0) ? 1 : 0)) | 0;\n\t        C[7] = (C[7] + 0xd34d34d3 + ((C[6] >>> 0) < (C_[6] >>> 0) ? 1 : 0)) | 0;\n\t        this._b = (C[7] >>> 0) < (C_[7] >>> 0) ? 1 : 0;\n\n\t        // Calculate the g-values\n\t        for (var i = 0; i < 8; i++) {\n\t            var gx = X[i] + C[i];\n\n\t            // Construct high and low argument for squaring\n\t            var ga = gx & 0xffff;\n\t            var gb = gx >>> 16;\n\n\t            // Calculate high and low result of squaring\n\t            var gh = ((((ga * ga) >>> 17) + ga * gb) >>> 15) + gb * gb;\n\t            var gl = (((gx & 0xffff0000) * gx) | 0) + (((gx & 0x0000ffff) * gx) | 0);\n\n\t            // High XOR low\n\t            G[i] = gh ^ gl;\n\t        }\n\n\t        // Calculate new state values\n\t        X[0] = (G[0] + ((G[7] << 16) | (G[7] >>> 16)) + ((G[6] << 16) | (G[6] >>> 16))) | 0;\n\t        X[1] = (G[1] + ((G[0] << 8)  | (G[0] >>> 24)) + G[7]) | 0;\n\t        X[2] = (G[2] + ((G[1] << 16) | (G[1] >>> 16)) + ((G[0] << 16) | (G[0] >>> 16))) | 0;\n\t        X[3] = (G[3] + ((G[2] << 8)  | (G[2] >>> 24)) + G[1]) | 0;\n\t        X[4] = (G[4] + ((G[3] << 16) | (G[3] >>> 16)) + ((G[2] << 16) | (G[2] >>> 16))) | 0;\n\t        X[5] = (G[5] + ((G[4] << 8)  | (G[4] >>> 24)) + G[3]) | 0;\n\t        X[6] = (G[6] + ((G[5] << 16) | (G[5] >>> 16)) + ((G[4] << 16) | (G[4] >>> 16))) | 0;\n\t        X[7] = (G[7] + ((G[6] << 8)  | (G[6] >>> 24)) + G[5]) | 0;\n\t    }\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.RabbitLegacy.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.RabbitLegacy.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.RabbitLegacy = StreamCipher._createHelper(RabbitLegacy);\n\t}());\n\n\n\treturn CryptoJS.RabbitLegacy;\n\n}));\n};"],
"names":["shadow$provide","global","require","module","exports","root","factory","undef","define","amd","CryptoJS","nextState","X","_X","C","_C","i","C_","_b","gx","ga","gb","G","StreamCipher","lib","S","RabbitLegacy","algo","extend","_doReset","K","_key","words","iv","cfg","call","IV","IV_0","IV_1","i0","i2","i1","i3","_doProcessBlock","M","offset","blockSize","ivSize","_createHelper"]
}
