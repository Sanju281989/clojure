{
"version":3,
"file":"module$node_modules$crypto_js$rc4.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/crypto-js/rc4.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$crypto_js$rc4\"] = function(global,require,module,exports) {\n;(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var StreamCipher = C_lib.StreamCipher;\n\t    var C_algo = C.algo;\n\n\t    /**\n\t     * RC4 stream cipher algorithm.\n\t     */\n\t    var RC4 = C_algo.RC4 = StreamCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var key = this._key;\n\t            var keyWords = key.words;\n\t            var keySigBytes = key.sigBytes;\n\n\t            // Init sbox\n\t            var S = this._S = [];\n\t            for (var i = 0; i < 256; i++) {\n\t                S[i] = i;\n\t            }\n\n\t            // Key setup\n\t            for (var i = 0, j = 0; i < 256; i++) {\n\t                var keyByteIndex = i % keySigBytes;\n\t                var keyByte = (keyWords[keyByteIndex >>> 2] >>> (24 - (keyByteIndex % 4) * 8)) & 0xff;\n\n\t                j = (j + S[i] + keyByte) % 256;\n\n\t                // Swap\n\t                var t = S[i];\n\t                S[i] = S[j];\n\t                S[j] = t;\n\t            }\n\n\t            // Counters\n\t            this._i = this._j = 0;\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            M[offset] ^= generateKeystreamWord.call(this);\n\t        },\n\n\t        keySize: 256/32,\n\n\t        ivSize: 0\n\t    });\n\n\t    function generateKeystreamWord() {\n\t        // Shortcuts\n\t        var S = this._S;\n\t        var i = this._i;\n\t        var j = this._j;\n\n\t        // Generate keystream word\n\t        var keystreamWord = 0;\n\t        for (var n = 0; n < 4; n++) {\n\t            i = (i + 1) % 256;\n\t            j = (j + S[i]) % 256;\n\n\t            // Swap\n\t            var t = S[i];\n\t            S[i] = S[j];\n\t            S[j] = t;\n\n\t            keystreamWord |= S[(S[i] + S[j]) % 256] << (24 - n * 8);\n\t        }\n\n\t        // Update counters\n\t        this._i = i;\n\t        this._j = j;\n\n\t        return keystreamWord;\n\t    }\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.RC4.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.RC4.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.RC4 = StreamCipher._createHelper(RC4);\n\n\t    /**\n\t     * Modified RC4 stream cipher algorithm.\n\t     */\n\t    var RC4Drop = C_algo.RC4Drop = RC4.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {number} drop The number of keystream words to drop. Default 192\n\t         */\n\t        cfg: RC4.cfg.extend({\n\t            drop: 192\n\t        }),\n\n\t        _doReset: function () {\n\t            RC4._doReset.call(this);\n\n\t            // Drop\n\t            for (var i = this.cfg.drop; i > 0; i--) {\n\t                generateKeystreamWord.call(this);\n\t            }\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.RC4Drop.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.RC4Drop.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.RC4Drop = StreamCipher._createHelper(RC4Drop);\n\t}());\n\n\n\treturn CryptoJS.RC4;\n\n}));\n};"],
"names":["shadow$provide","global","require","module","exports","root","factory","undef","define","amd","CryptoJS","generateKeystreamWord","S","_S","i","_i","j","_j","keystreamWord","n","t","StreamCipher","lib","C_algo","algo","RC4","extend","_doReset","key","_key","keyWords","words","keySigBytes","sigBytes","keyByteIndex","_doProcessBlock","M","offset","call","keySize","ivSize","_createHelper","RC4Drop","cfg","drop"]
}
