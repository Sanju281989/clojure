{"version":3,"sources":["kira/dashboard.cljs"],"mappings":"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","names":["kira.dashboard/message","reagent.core.atom","js/kira","js/kira.dashboard","js/kira.dashboard.root-el","kira.dashboard/root-el","js/document.getElementById","kira.dashboard/secapp","kira.util/lazy-component*","shadow.lazy/Loadable","kira.dashboard/help","kira.dashboard/add2","var_args","G__26558","kira.dashboard/welcome-dsd","js/Error","cljs.core/deref","abc","js/kira.dashboard.welcome_message","kira.dashboard/welcome_message","cljs.core/+","kira.dashboard/clock","timer","js/Date","time-updater","js/setInterval","cljs.core/reset!","time-str","clojure.string.split","cljs.core/first","p__26559","map__26560","cljs.core/--destructure-map","cljs.core.get","kira.dashboard/error-handler","status","status-text","js/console","kira.dashboard/verify-handler","response","cljs.core.swap_BANG_","kira.login/app-state","cljs.core/assoc","kira.dashboard/verify-credentials","payload","vec__26561","cljs.core.nth","username","password","c__26228__auto__","cljs.core.async.chan","cljs.core.async.impl.dispatch/run","f__26229__auto__","switch__26143__auto__","state_26585","state_val_26586","inst_26564","inst_26565","inst_26566","inst_26567","cljs.core/PersistentHashMap","inst_26568","inst_26569","inst_26570","cljs.core.async.impl.ioc-helpers/take!","inst_26572","inst_26573","inst_26574","inst_26575","inst_26576","statearr-26587","statearr-26588","statearr-26589","inst_26578","inst_26579","statearr-26590","statearr-26591","inst_26581","statearr-26592","inst_26583","cljs.core.async.impl.ioc-helpers/return-chan","statearr-26593","state-machine__26144__auto__","ret-value__26145__auto__","result__26146__auto__","cljs.core/keyword-identical?","ex__26147__auto__","e26594","statearr-26595","cljs.core/seq","statearr-26596","state__26230__auto__","statearr-26597","cljs.core.async.impl.ioc-helpers/USER-START-IDX","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","cljs_http.client.post","kira.dashboard/x","kira.dashboard.welcome_dsd","kira.dashboard/event-queue","state_26626","state_val_26627","inst_26606","inst_26607","inst_26608","inst_26609","statearr-26628","statearr-26629","inst_26614","inst_26615","statearr-26630","G__26631","cljs.core/Keyword","statearr-26632","inst_26624","inst_26619","statearr-26633","inst_26616","statearr-26634","inst_26621","statearr-26635","statearr-26636","statearr-26637","e26638","statearr-26639","statearr-26640","statearr-26641","p1__26642#","kira.dashboard/input-box","type","label","var","kira.dashboard/login-form","cljs.core.async.put_BANG_","kira.dashboard/welcome","kira.dashboard/root","map__26643","page","state","js/module$node_modules$react$index.Suspense","reagent.core/as-element","G__26644","kira.dashboard/start","reagent.core.render","kira.dashboard/init"],"sourcesContent":["(ns kira.dashboard\n  (:require\n    [\"react\" :as react]\n    [reagent.core :as r]\n    [kira.login :as login]\n    [cljs-http.client :as http]\n    [kira.util :refer (lazy-component)]\n    [ajax.core :refer [GET POST PUT]]\n    [cljs.core.async :refer (chan put! <! go go-loop timeout)]\n    [cljs.nodejs :as node]\n    [clojure.string :as str]\n    ))\n(def message (r/atom \"\"))\n\n(defonce root-el (js/document.getElementById \"root\"))\n(def secapp (lazy-component kira.secapp/rootts))\n(def help (lazy-component kira.help/rootdd))\n\n\n(defn add2 []\n      (+ 2 2))\n\n\n(defn welcome-dsd\n  ([abc]\n   (defonce welcome_message (r/atom abc)))\n  ([]\n   [:h1.text-lg.font-bold.text-right \"Welcome\" + \" \" + @welcome_message])\n  )\n\n(defn clock []\n      (let [timer (r/atom (js/Date.))]\n      (let [time-updater (js/setInterval\n                           #(reset! timer (js/Date.)) 1000)]\n      (let [time-str (-> @timer .toTimeString (str/split \" \") first)]\n           [:div.example-clock\n            {:style {:color \"#fff\"}}\n            time-str]))))\n\n(defn error-handler [{:keys [status status-text]}]\n      (.log js/console (str \"something bad happened: \" status \" \" status-text)))\n\n(defn verify-handler [response]\n      (swap! login/app-state assoc :page :secapp)\n )\n\n(defn verify-credentials\n      [payload]\n      ;(let [message (r/atom \"\")]\n           (let [[username password] payload]\n                (if (or (== username \"\") (== password \"\"))\n                  (reset! message \"Please provide the User-Id and Password.\")\n                  (do\n                    (reset! message \"Authenticating...\")\n                    (go (let [response (<! (http/post \"http://127.0.0.1:3000/authenticate-user\"\n                                                      {:query-params {:user_id username :user_pass password}}))]\n                             (def x (:body response))\n                             (reset! message \"\")\n                             (if (== x 1)\n                               (do\n                                 (verify-handler x)\n                                 (welcome-dsd username)\n                                 )\n                               (reset! message \"Incorrect credentials\")\n                               )\n                             ))\n                    )\n                  )\n                )\n           ;)\n           )\n\n      (def event-queue (chan))\n      (go-loop [[event payload] (<! event-queue)]\n               (case event\n                     :login (verify-credentials payload)\n                     ) (recur (<! event-queue)))\n\n      (defn input-box [type label var]\n            [:div.input-box\n             [:label label]\n             [:input {:on-change #(reset! var (-> % .-target .-value))\n                      :type      type}]])\n\n      (defn login-form []\n            (let [username (r/atom \"\")\n                  password (r/atom \"\")\n                  ]\n                 [:div\n                  [input-box \"text\" \"Username: \" username]\n                  [input-box \"password\" \"Password: \" password]\n                  [:button.btn-blue.hover:bg-teal-400\n                   {:on-click #(put! event-queue [:login [@username @password]])}\n                   \"Submit\"]\n                  ]))\n\n\n      (defn welcome\n            ([]\n             [:div\n              [:center\n               [:h1.text-2xl.font-bold \"Welcome to Clojure\"]\n               [login-form]\n               [:p\n                [:label {:style {:color \"red\"}} @message]\n                ]\n               ]\n              ])\n             )\n\n      (defn root []\n            (let [{:keys [page] :as state} @login/app-state]\n                 [:div\n                  [:> react/Suspense {:fallback (r/as-element [:div \"Loading ...\"])}\n                   (case page\n                         :secapp\n                         [:> secapp {}]\n                         :help\n                         [:> help {}]\n                         :welcome\n                         [welcome {}]\n                         [:div [\"Unknown page?\"]]\n                         )]]))\n\n      (defn ^:dev/after-load start []\n            (r/render [root] root-el))\n\n      (defn init []\n            (start))\n\n\n\n"]}