{"version":3,"sources":["kira/dash.cljs"],"mappings":"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","names":["kira.dash/counter","reagent.core.atom","kira.dash/message","kira.dash/welcome_message","kira.dash/file_data","kira.dash/error_message","js/kira","js/kira.dash","js/kira.dash.root-el","kira.dash/root-el","js/document.getElementById","kira.dash/secapp","kira.util/lazy-component*","shadow.lazy/Loadable","kira.dash/help","js/kira.dash.timer","kira.dash/timer","js/Date","js/kira.dash.time-updater","kira.dash/time-updater","js/setInterval","cljs.core/reset!","kira.dash/clock","time-str","cljs.core/deref","clojure.string.split","cljs.core/first","p__26563","map__26564","cljs.core/--destructure-map","cljs.core.get","kira.dash/error-handler","status","status-text","js/console","kira.dash/handle_data","response","kira.dash/get-files","ajax.core.GET","kira.dash/handler","cljs.core.swap_BANG_","kira.env/app-state","cljs.core/assoc","kira.dash/verify-credentials","payload","vec__26565","cljs.core.nth","username","password","c__26234__auto__","cljs.core.async.chan","cljs.core.async.impl.dispatch/run","f__26235__auto__","switch__26149__auto__","state_26592","state_val_26593","inst_26568","inst_26569","inst_26570","inst_26571","cljs.core/PersistentHashMap","inst_26572","inst_26573","inst_26574","cljs.core.async.impl.ioc-helpers/take!","inst_26576","inst_26577","inst_26578","inst_26579","inst_26580","inst_26581","inst_26582","inst_26583","inst_26584","statearr-26594","statearr-26595","statearr-26596","inst_26586","statearr-26597","inst_26588","statearr-26598","inst_26590","cljs.core.async.impl.ioc-helpers/return-chan","statearr-26599","state-machine__26150__auto__","ret-value__26151__auto__","result__26152__auto__","cljs.core/keyword-identical?","ex__26153__auto__","e26600","statearr-26601","cljs.core/seq","statearr-26602","state__26236__auto__","statearr-26603","cljs.core.async.impl.ioc-helpers/USER-START-IDX","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","cljs_http.client.post","cljs.core.println","kira.dash/x","kira.dash/event-queue","state_26638","state_val_26639","inst_26624","statearr-26640","inst_26636","inst_26621","inst_26622","statearr-26641","inst_26615","inst_26620","statearr-26642","G__26643","cljs.core/Keyword","statearr-26644","statearr-26645","statearr-26646","statearr-26647","js/Error","inst_26612","inst_26613","inst_26614","statearr-26648","statearr-26649","inst_26628","statearr-26650","inst_26631","statearr-26651","inst_26633","statearr-26652","statearr-26653","inst_26626","statearr-26654","statearr-26655","e26656","statearr-26657","statearr-26658","statearr-26659","kira.dash/edit-text","kira.dash/san-update","kira.dash/san-refreshdata","p1__26660#","kira.dash/input-box","type","label","var","kira.dash/login-box","cljs.core.async.put_BANG_","kira.dash/welcome","kira.dash/root","map__26661","page","state","js/module$node_modules$react$index.Suspense","reagent.core/as-element","G__26662","kira.dash/start","reagent.core.render","kira.dash/init"],"sourcesContent":["(ns kira.dash\n  (:require\n    [\"react\" :as react]\n    [reagent.core :as r]\n    [kira.env :as env]\n    [cljs-http.client :as http]\n    [kira.util :refer (lazy-component)]\n    [ajax.core :refer [GET POST PUT]]\n    [cljs.core.async :refer (chan put! <! go go-loop timeout)]\n    [cljs.nodejs :as node]\n    [clojure.string :as str]\n    ))\n;---------------------------------------\n(def counter (r/atom 0))\n(def message (r/atom \"\"))\n(def welcome_message (r/atom \"\"))\n(def file_data (r/atom \"\"))\n(def error_message (r/atom \"\"))\n;---------------------------------------\n(defonce root-el (js/document.getElementById \"root\"))\n(def secapp (lazy-component kira.secapp/root))\n(def help (lazy-component kira.help/root))\n;---------------------------------------\n;---------------Timer-------------------\n(defonce timer (r/atom (js/Date.)))\n(defonce time-updater (js/setInterval\n      #(reset! timer (js/Date.)) 1000))\n(defn clock []\n      (let [time-str (-> @timer .toTimeString (str/split \" \") first)]\n           [:div.example-clock\n            {:style {:color \"#fff\"}}\n            time-str]))\n;---------------------------------------\n(defn error-handler [{:keys [status status-text]}]\n      (.log js/console (str \"something bad happened: \" status \" \" status-text)))\n;---------------------------------------\n(defn handle_data [response]\n      (reset! file_data response)\n)\n;---------------------------------------\n(defn get-files\n      []\n      (GET \"http://127.0.0.1:3000/get-all-file-details\"\n           {\n            :response-format :json\n            :keywords? true\n            :handler handle_data\n            :error-handler error-handler})\n      )\n;---------------------------------------\n(defn handler [response]\n      (swap! env/app-state assoc :page :secapp)\n      (get-files)\n)\n;---------------------------------------\n(defn verify-credentials\n      [payload]\n      (let [[username password] payload]\n           (if (or (== username \"\") (== password \"\"))\n             (reset! message \"Please provide the User-Id and Password.\")\n             (do\n               (reset! message \"Authenticating...\")\n               (reset! welcome_message username)\n\n                        (go (let [response (<! (http/post \"http://127.0.0.1:3000/authenticate-user\"\n                        {:query-params {:user_id username :user_pass password}\n                                                                                  }))]\n                        (println (:status response))\n                        (println (:body response))\n                        (def x (:body response))\n                                 ;     (println \"X :\" x)\n                        (reset! message \"\")\n                        (if (== x 1)\n                          (handler x)\n                          ;(error-handler x)\n                          (reset! message \"Incorrect credentials\")\n                          )\n                        ))\n                    )\n             )\n           )\n      )\n;---------------------------------------\n(def event-queue (chan))\n(go-loop [[event payload] (<! event-queue)]\n         (case event\n               :login (verify-credentials payload)\n               :edit-text (edit-text)\n               :sanupdate (san-update)\n               :sanrefresh (san-refreshdata)\n               )\n         (recur (<! event-queue))\n         )\n;---------------------------------------\n(defn input-box [type label var]\n      [:div.input-box\n       [:label label]\n       [:input {:on-change #(reset! var (-> % .-target .-value))\n                :type type}]])\n;---------------------------------------\n(defn login-box []\n      (let [username (r/atom \"\")\n            password (r/atom \"\")\n            ]\n           [:div\n            [input-box \"text\" \"Username: \" username]\n            [input-box \"password\" \"Password: \" password]\n            [:button.btn-blue.hover:bg-teal-400\n             {:on-click #(put! event-queue [:login [@username @password]])}\n             \"Submit\"]\n             ]\n           ))\n;---------------------------------------\n(defn welcome []\n      [:div\n       [:center\n        [:h1.text-2xl.font-bold \"Welcome to Clojure\"]\n        [login-box]\n        [:p\n         ;[:label @message]\n         [:label {:style {:color \"red\"}} @message]\n         ]\n        ]\n       ])\n;---------------------------------------\n(defn root []\n      (let [{:keys [page] :as state} @env/app-state]\n           [:div\n            [:> react/Suspense {:fallback (r/as-element [:div \"Loading ...\"])}\n             (case page\n                   :secapp\n                   [:> secapp {}]\n                   :help\n                   [:> help {}]\n                   :welcome\n                   [welcome {}]\n                   ; [:div [\"Unknown page sanjay?\"]]\n                   [:div [welcome {}]]\n                   )]]))\n;---------------------------------------\n(defn ^:dev/after-load start []\n(r/render [root] root-el))\n;---------------------------------------\n(defn init []\n(start))\n;---------------------------------------\n"]}