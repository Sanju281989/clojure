["^ ","~:output",["^ ","~:js","goog.provide('reagent.impl.template');\r\nvar module$node_modules$react$index=shadow.js.require(\"module$node_modules$react$index\", {});\r\n/**\r\n * Regular expression that parses a CSS-style id and class\r\n *           from a tag name.\r\n */\r\nreagent.impl.template.re_tag = /([^\\s\\.#]+)(?:#([^\\s\\.#]+))?(?:\\.([^\\s#]+))?/;\r\n\r\n/**\r\n* @constructor\r\n*/\r\nreagent.impl.template.NativeWrapper = (function (){\r\n});\r\n\r\n(reagent.impl.template.NativeWrapper.getBasis = (function (){\r\nreturn cljs.core.PersistentVector.EMPTY;\r\n}));\r\n\r\n(reagent.impl.template.NativeWrapper.cljs$lang$type = true);\r\n\r\n(reagent.impl.template.NativeWrapper.cljs$lang$ctorStr = \"reagent.impl.template/NativeWrapper\");\r\n\r\n(reagent.impl.template.NativeWrapper.cljs$lang$ctorPrWriter = (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\"reagent.impl.template/NativeWrapper\");\r\n}));\r\n\r\n/**\r\n * Positional factory function for reagent.impl.template/NativeWrapper.\r\n */\r\nreagent.impl.template.__GT_NativeWrapper = (function reagent$impl$template$__GT_NativeWrapper(){\r\nreturn (new reagent.impl.template.NativeWrapper());\r\n});\r\n\r\nreagent.impl.template.named_QMARK_ = (function reagent$impl$template$named_QMARK_(x){\r\nreturn (((x instanceof cljs.core.Keyword)) || ((x instanceof cljs.core.Symbol)));\r\n});\r\nreagent.impl.template.hiccup_tag_QMARK_ = (function reagent$impl$template$hiccup_tag_QMARK_(x){\r\nreturn ((reagent.impl.template.named_QMARK_(x)) || (typeof x === 'string'));\r\n});\r\nreagent.impl.template.valid_tag_QMARK_ = (function reagent$impl$template$valid_tag_QMARK_(x){\r\nreturn ((reagent.impl.template.hiccup_tag_QMARK_(x)) || (((cljs.core.ifn_QMARK_(x)) || ((x instanceof reagent.impl.template.NativeWrapper)))));\r\n});\r\nreagent.impl.template.prop_name_cache = ({\"class\": \"className\", \"for\": \"htmlFor\", \"charset\": \"charSet\"});\r\nreagent.impl.template.cache_get = (function reagent$impl$template$cache_get(o,k){\r\nif(o.hasOwnProperty(k)){\r\nreturn (o[k]);\r\n} else {\r\nreturn null;\r\n}\r\n});\r\nreagent.impl.template.cached_prop_name = (function reagent$impl$template$cached_prop_name(k){\r\nif(reagent.impl.template.named_QMARK_(k)){\r\nvar temp__5755__auto__ = reagent.impl.template.cache_get(reagent.impl.template.prop_name_cache,cljs.core.name(k));\r\nif((temp__5755__auto__ == null)){\r\nreturn (reagent.impl.template.prop_name_cache[cljs.core.name(k)] = reagent.impl.util.dash_to_camel(k));\r\n} else {\r\nvar k_SINGLEQUOTE_ = temp__5755__auto__;\r\nreturn k_SINGLEQUOTE_;\r\n}\r\n} else {\r\nreturn k;\r\n}\r\n});\r\nreagent.impl.template.js_val_QMARK_ = (function reagent$impl$template$js_val_QMARK_(x){\r\nreturn (!((\"object\" === goog.typeOf(x))));\r\n});\r\nreagent.impl.template.kv_conv = (function reagent$impl$template$kv_conv(o,k,v){\r\nvar G__36705 = o;\r\n(G__36705[reagent.impl.template.cached_prop_name(k)] = (reagent.impl.template.convert_prop_value.cljs$core$IFn$_invoke$arity$1 ? reagent.impl.template.convert_prop_value.cljs$core$IFn$_invoke$arity$1(v) : reagent.impl.template.convert_prop_value.call(null,v)));\r\n\r\nreturn G__36705;\r\n});\r\nreagent.impl.template.convert_prop_value = (function reagent$impl$template$convert_prop_value(x){\r\nif(reagent.impl.template.js_val_QMARK_(x)){\r\nreturn x;\r\n} else {\r\nif(reagent.impl.template.named_QMARK_(x)){\r\nreturn cljs.core.name(x);\r\n} else {\r\nif(cljs.core.map_QMARK_(x)){\r\nreturn cljs.core.reduce_kv(reagent.impl.template.kv_conv,({}),x);\r\n} else {\r\nif(cljs.core.coll_QMARK_(x)){\r\nreturn cljs.core.clj__GT_js(x);\r\n} else {\r\nif(cljs.core.ifn_QMARK_(x)){\r\nreturn (function() { \r\nvar G__36732__delegate = function (args){\r\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(x,args);\r\n};\r\nvar G__36732 = function (var_args){\r\nvar args = null;\r\nif (arguments.length > 0) {\r\nvar G__36733__i = 0, G__36733__a = new Array(arguments.length -  0);\r\nwhile (G__36733__i < G__36733__a.length) {G__36733__a[G__36733__i] = arguments[G__36733__i + 0]; ++G__36733__i;}\r\n  args = new cljs.core.IndexedSeq(G__36733__a,0,null);\r\n} \r\nreturn G__36732__delegate.call(this,args);};\r\nG__36732.cljs$lang$maxFixedArity = 0;\r\nG__36732.cljs$lang$applyTo = (function (arglist__36734){\r\nvar args = cljs.core.seq(arglist__36734);\r\nreturn G__36732__delegate(args);\r\n});\r\nG__36732.cljs$core$IFn$_invoke$arity$variadic = G__36732__delegate;\r\nreturn G__36732;\r\n})()\r\n;\r\n} else {\r\nreturn cljs.core.clj__GT_js(x);\r\n\r\n}\r\n}\r\n}\r\n}\r\n}\r\n});\r\nreagent.impl.template.custom_prop_name_cache = ({});\r\nreagent.impl.template.cached_custom_prop_name = (function reagent$impl$template$cached_custom_prop_name(k){\r\nif(reagent.impl.template.named_QMARK_(k)){\r\nvar temp__5755__auto__ = reagent.impl.template.cache_get(reagent.impl.template.custom_prop_name_cache,cljs.core.name(k));\r\nif((temp__5755__auto__ == null)){\r\nreturn (reagent.impl.template.custom_prop_name_cache[cljs.core.name(k)] = reagent.impl.util.dash_to_camel(k));\r\n} else {\r\nvar k_SINGLEQUOTE_ = temp__5755__auto__;\r\nreturn k_SINGLEQUOTE_;\r\n}\r\n} else {\r\nreturn k;\r\n}\r\n});\r\nreagent.impl.template.custom_kv_conv = (function reagent$impl$template$custom_kv_conv(o,k,v){\r\nvar G__36706 = o;\r\n(G__36706[reagent.impl.template.cached_custom_prop_name(k)] = reagent.impl.template.convert_prop_value(v));\r\n\r\nreturn G__36706;\r\n});\r\nreagent.impl.template.convert_custom_prop_value = (function reagent$impl$template$convert_custom_prop_value(x){\r\nif(reagent.impl.template.js_val_QMARK_(x)){\r\nreturn x;\r\n} else {\r\nif(reagent.impl.template.named_QMARK_(x)){\r\nreturn cljs.core.name(x);\r\n} else {\r\nif(cljs.core.map_QMARK_(x)){\r\nreturn cljs.core.reduce_kv(reagent.impl.template.custom_kv_conv,({}),x);\r\n} else {\r\nif(cljs.core.coll_QMARK_(x)){\r\nreturn cljs.core.clj__GT_js(x);\r\n} else {\r\nif(cljs.core.ifn_QMARK_(x)){\r\nreturn (function() { \r\nvar G__36735__delegate = function (args){\r\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(x,args);\r\n};\r\nvar G__36735 = function (var_args){\r\nvar args = null;\r\nif (arguments.length > 0) {\r\nvar G__36736__i = 0, G__36736__a = new Array(arguments.length -  0);\r\nwhile (G__36736__i < G__36736__a.length) {G__36736__a[G__36736__i] = arguments[G__36736__i + 0]; ++G__36736__i;}\r\n  args = new cljs.core.IndexedSeq(G__36736__a,0,null);\r\n} \r\nreturn G__36735__delegate.call(this,args);};\r\nG__36735.cljs$lang$maxFixedArity = 0;\r\nG__36735.cljs$lang$applyTo = (function (arglist__36737){\r\nvar args = cljs.core.seq(arglist__36737);\r\nreturn G__36735__delegate(args);\r\n});\r\nG__36735.cljs$core$IFn$_invoke$arity$variadic = G__36735__delegate;\r\nreturn G__36735;\r\n})()\r\n;\r\n} else {\r\nreturn cljs.core.clj__GT_js(x);\r\n\r\n}\r\n}\r\n}\r\n}\r\n}\r\n});\r\nreagent.impl.template.oset = (function reagent$impl$template$oset(o,k,v){\r\nvar G__36707 = (((o == null))?({}):o);\r\n(G__36707[k] = v);\r\n\r\nreturn G__36707;\r\n});\r\nreagent.impl.template.oget = (function reagent$impl$template$oget(o,k){\r\nif((o == null)){\r\nreturn null;\r\n} else {\r\nreturn (o[k]);\r\n}\r\n});\r\n/**\r\n * Takes the id and class from tag keyword, and adds them to the\r\n *   other props. Parsed tag is JS object with :id and :class properties.\r\n */\r\nreagent.impl.template.set_id_class = (function reagent$impl$template$set_id_class(props,id_class){\r\nvar id = (id_class[\"id\"]);\r\nvar class$ = (id_class[\"class\"]);\r\nvar G__36708 = props;\r\nvar G__36708__$1 = (((((!((id == null)))) && ((new cljs.core.Keyword(null,\"id\",\"id\",-1388402092).cljs$core$IFn$_invoke$arity$1(props) == null))))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__36708,new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),id):G__36708);\r\nif(cljs.core.truth_(class$)){\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__36708__$1,new cljs.core.Keyword(null,\"class\",\"class\",-2030961996),(function (){var old_class = new cljs.core.Keyword(null,\"class\",\"class\",-2030961996).cljs$core$IFn$_invoke$arity$1(props);\r\nif((old_class == null)){\r\nreturn class$;\r\n} else {\r\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(class$),\" \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(((reagent.impl.template.named_QMARK_(old_class))?cljs.core.name(old_class):old_class))].join('');\r\n}\r\n})());\r\n} else {\r\nreturn G__36708__$1;\r\n}\r\n});\r\nreagent.impl.template.stringify_class = (function reagent$impl$template$stringify_class(p__36709){\r\nvar map__36710 = p__36709;\r\nvar map__36710__$1 = cljs.core.__destructure_map(map__36710);\r\nvar props = map__36710__$1;\r\nvar class$ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__36710__$1,new cljs.core.Keyword(null,\"class\",\"class\",-2030961996));\r\nif(cljs.core.coll_QMARK_(class$)){\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(props,new cljs.core.Keyword(null,\"class\",\"class\",-2030961996),clojure.string.join.cljs$core$IFn$_invoke$arity$2(\" \",cljs.core.keep.cljs$core$IFn$_invoke$arity$2((function (c){\r\nif(cljs.core.truth_(c)){\r\nif(reagent.impl.template.named_QMARK_(c)){\r\nreturn cljs.core.name(c);\r\n} else {\r\nreturn c;\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n}),class$)));\r\n} else {\r\nreturn props;\r\n}\r\n});\r\nreagent.impl.template.convert_props = (function reagent$impl$template$convert_props(props,id_class){\r\nvar props__$1 = reagent.impl.template.set_id_class(reagent.impl.template.stringify_class(props),id_class);\r\nif(cljs.core.truth_((id_class[\"custom\"]))){\r\nreturn reagent.impl.template.convert_custom_prop_value(props__$1);\r\n} else {\r\nreturn reagent.impl.template.convert_prop_value(props__$1);\r\n}\r\n});\r\nif((typeof reagent !== 'undefined') && (typeof reagent.impl !== 'undefined') && (typeof reagent.impl.template !== 'undefined') && (typeof reagent.impl.template.find_dom_node !== 'undefined')){\r\n} else {\r\nreagent.impl.template.find_dom_node = null;\r\n}\r\nreagent.impl.template.these_inputs_have_selection_api = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, [\"url\",null,\"tel\",null,\"text\",null,\"textarea\",null,\"password\",null,\"search\",null], null), null);\r\nreagent.impl.template.has_selection_api_QMARK_ = (function reagent$impl$template$has_selection_api_QMARK_(input_type){\r\nreturn cljs.core.contains_QMARK_(reagent.impl.template.these_inputs_have_selection_api,input_type);\r\n});\r\nreagent.impl.template.input_node_set_value = (function reagent$impl$template$input_node_set_value(node,rendered_value,dom_value,component,p__36711){\r\nvar map__36712 = p__36711;\r\nvar map__36712__$1 = cljs.core.__destructure_map(map__36712);\r\nvar on_write = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__36712__$1,new cljs.core.Keyword(null,\"on-write\",\"on-write\",31519475));\r\nif((!((((node === (document[\"activeElement\"]))) && (((reagent.impl.template.has_selection_api_QMARK_((node[\"type\"]))) && (((typeof rendered_value === 'string') && (typeof dom_value === 'string'))))))))){\r\n(component[\"cljsDOMValue\"] = rendered_value);\r\n\r\n(node[\"value\"] = rendered_value);\r\n\r\nif(cljs.core.fn_QMARK_(on_write)){\r\nreturn (on_write.cljs$core$IFn$_invoke$arity$1 ? on_write.cljs$core$IFn$_invoke$arity$1(rendered_value) : on_write.call(null,rendered_value));\r\n} else {\r\nreturn null;\r\n}\r\n} else {\r\nvar node_value = (node[\"value\"]);\r\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(node_value,dom_value)){\r\nreturn reagent.impl.batching.do_after_render((function (){\r\nreturn (reagent.impl.template.input_component_set_value.cljs$core$IFn$_invoke$arity$1 ? reagent.impl.template.input_component_set_value.cljs$core$IFn$_invoke$arity$1(component) : reagent.impl.template.input_component_set_value.call(null,component));\r\n}));\r\n} else {\r\nvar existing_offset_from_end = (cljs.core.count(node_value) - (node[\"selectionStart\"]));\r\nvar new_cursor_offset = (cljs.core.count(rendered_value) - existing_offset_from_end);\r\n(component[\"cljsDOMValue\"] = rendered_value);\r\n\r\n(node[\"value\"] = rendered_value);\r\n\r\nif(cljs.core.fn_QMARK_(on_write)){\r\n(on_write.cljs$core$IFn$_invoke$arity$1 ? on_write.cljs$core$IFn$_invoke$arity$1(rendered_value) : on_write.call(null,rendered_value));\r\n} else {\r\n}\r\n\r\n(node[\"selectionStart\"] = new_cursor_offset);\r\n\r\nreturn (node[\"selectionEnd\"] = new_cursor_offset);\r\n}\r\n}\r\n});\r\nreagent.impl.template.input_component_set_value = (function reagent$impl$template$input_component_set_value(this$){\r\nif(cljs.core.truth_((this$[\"cljsInputLive\"]))){\r\n(this$[\"cljsInputDirty\"] = false);\r\n\r\nvar rendered_value = (this$[\"cljsRenderedValue\"]);\r\nvar dom_value = (this$[\"cljsDOMValue\"]);\r\nvar node = (reagent.impl.template.find_dom_node.cljs$core$IFn$_invoke$arity$1 ? reagent.impl.template.find_dom_node.cljs$core$IFn$_invoke$arity$1(this$) : reagent.impl.template.find_dom_node.call(null,this$));\r\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(rendered_value,dom_value)){\r\nreturn reagent.impl.template.input_node_set_value(node,rendered_value,dom_value,this$,cljs.core.PersistentArrayMap.EMPTY);\r\n} else {\r\nreturn null;\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n});\r\nreagent.impl.template.input_handle_change = (function reagent$impl$template$input_handle_change(this$,on_change,e){\r\n(this$[\"cljsDOMValue\"] = e.target.value);\r\n\r\nif(cljs.core.truth_((this$[\"cljsInputDirty\"]))){\r\n} else {\r\n(this$[\"cljsInputDirty\"] = true);\r\n\r\nreagent.impl.batching.do_after_render((function (){\r\nreturn reagent.impl.template.input_component_set_value(this$);\r\n}));\r\n}\r\n\r\nreturn (on_change.cljs$core$IFn$_invoke$arity$1 ? on_change.cljs$core$IFn$_invoke$arity$1(e) : on_change.call(null,e));\r\n});\r\nreagent.impl.template.input_render_setup = (function reagent$impl$template$input_render_setup(this$,jsprops){\r\nif(cljs.core.truth_((function (){var and__4251__auto__ = (!((jsprops == null)));\r\nif(and__4251__auto__){\r\nvar and__4251__auto____$1 = jsprops.hasOwnProperty(\"onChange\");\r\nif(cljs.core.truth_(and__4251__auto____$1)){\r\nreturn jsprops.hasOwnProperty(\"value\");\r\n} else {\r\nreturn and__4251__auto____$1;\r\n}\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n})())){\r\nif(cljs.core.truth_(reagent.impl.template.find_dom_node)){\r\n} else {\r\nthrow (new Error([\"Assert failed: \",\"reagent.dom needs to be loaded for controlled input to work\",\"\\n\",\"find-dom-node\"].join('')));\r\n}\r\n\r\nvar v = (jsprops[\"value\"]);\r\nvar value = (((v == null))?\"\":v);\r\nvar on_change = (jsprops[\"onChange\"]);\r\nif(cljs.core.truth_((this$[\"cljsInputLive\"]))){\r\n} else {\r\n(this$[\"cljsInputLive\"] = true);\r\n\r\n(this$[\"cljsDOMValue\"] = value);\r\n}\r\n\r\n(this$[\"cljsRenderedValue\"] = value);\r\n\r\ndelete jsprops[\"value\"];\r\n\r\nvar G__36714 = jsprops;\r\n(G__36714[\"defaultValue\"] = value);\r\n\r\n(G__36714[\"onChange\"] = (function (p1__36713_SHARP_){\r\nreturn reagent.impl.template.input_handle_change(this$,on_change,p1__36713_SHARP_);\r\n}));\r\n\r\nreturn G__36714;\r\n} else {\r\nreturn null;\r\n}\r\n});\r\nreagent.impl.template.input_unmount = (function reagent$impl$template$input_unmount(this$){\r\nreturn (this$[\"cljsInputLive\"] = null);\r\n});\r\nreagent.impl.template.input_component_QMARK_ = (function reagent$impl$template$input_component_QMARK_(x){\r\nvar G__36715 = x;\r\nswitch (G__36715) {\r\ncase \"input\":\r\ncase \"textarea\":\r\nreturn true;\r\n\r\nbreak;\r\ndefault:\r\nreturn false;\r\n\r\n}\r\n});\r\nreagent.impl.template.reagent_input_class = null;\r\nreagent.impl.template.input_spec = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"display-name\",\"display-name\",694513143),\"ReagentInput\",new cljs.core.Keyword(null,\"component-did-update\",\"component-did-update\",-1468549173),reagent.impl.template.input_component_set_value,new cljs.core.Keyword(null,\"component-will-unmount\",\"component-will-unmount\",-2058314698),reagent.impl.template.input_unmount,new cljs.core.Keyword(null,\"reagent-render\",\"reagent-render\",-985383853),(function (argv,comp,jsprops,first_child){\r\nvar this$ = reagent.impl.component._STAR_current_component_STAR_;\r\nreagent.impl.template.input_render_setup(this$,jsprops);\r\n\r\nreturn (reagent.impl.template.make_element.cljs$core$IFn$_invoke$arity$4 ? reagent.impl.template.make_element.cljs$core$IFn$_invoke$arity$4(argv,comp,jsprops,first_child) : reagent.impl.template.make_element.call(null,argv,comp,jsprops,first_child));\r\n})], null);\r\nreagent.impl.template.reagent_input = (function reagent$impl$template$reagent_input(){\r\nif((reagent.impl.template.reagent_input_class == null)){\r\n(reagent.impl.template.reagent_input_class = reagent.impl.component.create_class(reagent.impl.template.input_spec));\r\n} else {\r\n}\r\n\r\nreturn reagent.impl.template.reagent_input_class;\r\n});\r\nreagent.impl.template.parse_tag = (function reagent$impl$template$parse_tag(hiccup_tag){\r\nvar vec__36716 = cljs.core.next(cljs.core.re_matches(reagent.impl.template.re_tag,cljs.core.name(hiccup_tag)));\r\nvar tag = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36716,(0),null);\r\nvar id = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36716,(1),null);\r\nvar class$ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36716,(2),null);\r\nvar class$__$1 = (((class$ == null))?null:clojure.string.replace(class$,/\\./,\" \"));\r\nif(cljs.core.truth_(tag)){\r\n} else {\r\nthrow (new Error([\"Assert failed: \",[\"Invalid tag: '\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(hiccup_tag),\"'\",reagent.impl.component.comp_name()].join(''),\"\\n\",\"tag\"].join('')));\r\n}\r\n\r\nreturn ({\"name\": tag, \"id\": id, \"class\": class$__$1, \"custom\": cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2((-1),tag.indexOf(\"-\"))});\r\n});\r\nreagent.impl.template.try_get_key = (function reagent$impl$template$try_get_key(x){\r\ntry{return cljs.core.get.cljs$core$IFn$_invoke$arity$2(x,new cljs.core.Keyword(null,\"key\",\"key\",-1516042587));\r\n}catch (e36719){var e = e36719;\r\nreturn null;\r\n}});\r\nreagent.impl.template.get_key = (function reagent$impl$template$get_key(x){\r\nif(cljs.core.map_QMARK_(x)){\r\nreturn reagent.impl.template.try_get_key(x);\r\n} else {\r\nreturn null;\r\n}\r\n});\r\nreagent.impl.template.key_from_vec = (function reagent$impl$template$key_from_vec(v){\r\nvar temp__5755__auto__ = reagent.impl.template.get_key(cljs.core.meta(v));\r\nif((temp__5755__auto__ == null)){\r\nreturn reagent.impl.template.get_key(cljs.core.nth.cljs$core$IFn$_invoke$arity$3(v,(1),null));\r\n} else {\r\nvar k = temp__5755__auto__;\r\nreturn k;\r\n}\r\n});\r\nreagent.impl.template.reag_element = (function reagent$impl$template$reag_element(tag,v){\r\nvar c = reagent.impl.component.as_class(tag);\r\nvar jsprops = ({\"argv\": v});\r\nvar temp__5757__auto___36744 = reagent.impl.template.key_from_vec(v);\r\nif((temp__5757__auto___36744 == null)){\r\n} else {\r\nvar key_36746 = temp__5757__auto___36744;\r\n(jsprops[\"key\"] = key_36746);\r\n}\r\n\r\nreturn module$node_modules$react$index.createElement(c,jsprops);\r\n});\r\nreagent.impl.template.fragment_element = (function reagent$impl$template$fragment_element(argv){\r\nvar props = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(argv,(1),null);\r\nvar hasprops = (((props == null)) || (cljs.core.map_QMARK_(props)));\r\nvar jsprops = reagent.impl.template.convert_prop_value(((hasprops)?props:null));\r\nvar first_child = ((1) + ((hasprops)?(1):(0)));\r\nvar temp__5757__auto___36747 = reagent.impl.template.key_from_vec(argv);\r\nif((temp__5757__auto___36747 == null)){\r\n} else {\r\nvar key_36748 = temp__5757__auto___36747;\r\nreagent.impl.template.oset(jsprops,\"key\",key_36748);\r\n}\r\n\r\nreturn (reagent.impl.template.make_element.cljs$core$IFn$_invoke$arity$4 ? reagent.impl.template.make_element.cljs$core$IFn$_invoke$arity$4(argv,module$node_modules$react$index.Fragment,jsprops,first_child) : reagent.impl.template.make_element.call(null,argv,module$node_modules$react$index.Fragment,jsprops,first_child));\r\n});\r\nreagent.impl.template.adapt_react_class = (function reagent$impl$template$adapt_react_class(c){\r\nvar G__36720 = reagent.impl.template.__GT_NativeWrapper();\r\n(G__36720[\"name\"] = c);\r\n\r\n(G__36720[\"id\"] = null);\r\n\r\n(G__36720[\"class\"] = null);\r\n\r\nreturn G__36720;\r\n});\r\nreagent.impl.template.tag_name_cache = ({});\r\nreagent.impl.template.cached_parse = (function reagent$impl$template$cached_parse(x){\r\nvar temp__5755__auto__ = reagent.impl.template.cache_get(reagent.impl.template.tag_name_cache,x);\r\nif((temp__5755__auto__ == null)){\r\nreturn (reagent.impl.template.tag_name_cache[x] = reagent.impl.template.parse_tag(x));\r\n} else {\r\nvar s = temp__5755__auto__;\r\nreturn s;\r\n}\r\n});\r\nreagent.impl.template.native_element = (function reagent$impl$template$native_element(parsed,argv,first){\r\nvar comp = (parsed[\"name\"]);\r\nvar props = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(argv,first,null);\r\nvar hasprops = (((props == null)) || (cljs.core.map_QMARK_(props)));\r\nvar jsprops = reagent.impl.template.convert_props(((hasprops)?props:null),parsed);\r\nvar first_child = (first + ((hasprops)?(1):(0)));\r\nif(reagent.impl.template.input_component_QMARK_(comp)){\r\nvar G__36721 = cljs.core.with_meta(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [reagent.impl.template.reagent_input(),argv,comp,jsprops,first_child], null),cljs.core.meta(argv));\r\nreturn (reagent.impl.template.as_element.cljs$core$IFn$_invoke$arity$1 ? reagent.impl.template.as_element.cljs$core$IFn$_invoke$arity$1(G__36721) : reagent.impl.template.as_element.call(null,G__36721));\r\n} else {\r\nvar key = reagent.impl.template.get_key(cljs.core.meta(argv));\r\nvar p = (((key == null))?jsprops:reagent.impl.template.oset(jsprops,\"key\",key));\r\nreturn (reagent.impl.template.make_element.cljs$core$IFn$_invoke$arity$4 ? reagent.impl.template.make_element.cljs$core$IFn$_invoke$arity$4(argv,comp,p,first_child) : reagent.impl.template.make_element.call(null,argv,comp,p,first_child));\r\n}\r\n});\r\nreagent.impl.template.str_coll = (function reagent$impl$template$str_coll(coll){\r\nreturn cljs.core.str.cljs$core$IFn$_invoke$arity$1(clojure.walk.prewalk((function (x){\r\nif(cljs.core.fn_QMARK_(x)){\r\nvar n = reagent.impl.util.fun_name(x);\r\nvar G__36723 = n;\r\nswitch (G__36723) {\r\ncase \"\":\r\nreturn x;\r\n\r\nbreak;\r\ndefault:\r\nreturn cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(n);\r\n\r\n}\r\n} else {\r\nreturn x;\r\n}\r\n}),coll));\r\n\r\n});\r\nreagent.impl.template.hiccup_err = (function reagent$impl$template$hiccup_err(var_args){\r\nvar args__4870__auto__ = [];\r\nvar len__4864__auto___36754 = arguments.length;\r\nvar i__4865__auto___36755 = (0);\r\nwhile(true){\r\nif((i__4865__auto___36755 < len__4864__auto___36754)){\r\nargs__4870__auto__.push((arguments[i__4865__auto___36755]));\r\n\r\nvar G__36756 = (i__4865__auto___36755 + (1));\r\ni__4865__auto___36755 = G__36756;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4871__auto__ = ((((1) < args__4870__auto__.length))?(new cljs.core.IndexedSeq(args__4870__auto__.slice((1)),(0),null)):null);\r\nreturn reagent.impl.template.hiccup_err.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4871__auto__);\r\n});\r\n\r\n(reagent.impl.template.hiccup_err.cljs$core$IFn$_invoke$arity$variadic = (function (v,msg){\r\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,msg)),\": \",reagent.impl.template.str_coll(v),\"\\n\",reagent.impl.component.comp_name()].join('');\r\n}));\r\n\r\n(reagent.impl.template.hiccup_err.cljs$lang$maxFixedArity = (1));\r\n\r\n/** @this {Function} */\r\n(reagent.impl.template.hiccup_err.cljs$lang$applyTo = (function (seq36724){\r\nvar G__36725 = cljs.core.first(seq36724);\r\nvar seq36724__$1 = cljs.core.next(seq36724);\r\nvar self__4851__auto__ = this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__36725,seq36724__$1);\r\n}));\r\n\r\nreagent.impl.template.vec_to_elem = (function reagent$impl$template$vec_to_elem(v){\r\nwhile(true){\r\nif((cljs.core.count(v) > (0))){\r\n} else {\r\nthrow (new Error([\"Assert failed: \",reagent.impl.template.hiccup_err.cljs$core$IFn$_invoke$arity$variadic(v,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Hiccup form should not be empty\"], 0)),\"\\n\",\"(pos? (count v))\"].join('')));\r\n}\r\n\r\nvar tag = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(v,(0),null);\r\nif(reagent.impl.template.valid_tag_QMARK_(tag)){\r\n} else {\r\nthrow (new Error([\"Assert failed: \",reagent.impl.template.hiccup_err.cljs$core$IFn$_invoke$arity$variadic(v,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Invalid Hiccup form\"], 0)),\"\\n\",\"(valid-tag? tag)\"].join('')));\r\n}\r\n\r\nif(cljs.core.keyword_identical_QMARK_(new cljs.core.Keyword(null,\"<>\",\"<>\",1280186386),tag)){\r\nreturn reagent.impl.template.fragment_element(v);\r\n} else {\r\nif(reagent.impl.template.hiccup_tag_QMARK_(tag)){\r\nvar n = cljs.core.name(tag);\r\nvar pos = n.indexOf(\">\");\r\nvar G__36726 = pos;\r\nswitch (G__36726) {\r\ncase (-1):\r\nreturn reagent.impl.template.native_element(reagent.impl.template.cached_parse(n),v,(1));\r\n\r\nbreak;\r\ncase (0):\r\nvar comp = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(v,(1),null);\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\">\",n)){\r\n} else {\r\nthrow (new Error([\"Assert failed: \",reagent.impl.template.hiccup_err.cljs$core$IFn$_invoke$arity$variadic(v,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Invalid Hiccup tag\"], 0)),\"\\n\",\"(= \\\">\\\" n)\"].join('')));\r\n}\r\n\r\nreturn reagent.impl.template.native_element(({\"name\": comp}),v,(2));\r\n\r\nbreak;\r\ndefault:\r\nvar G__36758 = cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.cljs$core$IFn$_invoke$arity$3(n,(0),pos),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.with_meta(v,null),(0),cljs.core.subs.cljs$core$IFn$_invoke$arity$2(n,(pos + (1))))], null),cljs.core.meta(v));\r\nv = G__36758;\r\ncontinue;\r\n\r\n}\r\n} else {\r\nif((tag instanceof reagent.impl.template.NativeWrapper)){\r\nreturn reagent.impl.template.native_element(tag,v,(1));\r\n} else {\r\nreturn reagent.impl.template.reag_element(tag,v);\r\n\r\n}\r\n}\r\n}\r\nbreak;\r\n}\r\n});\r\nreagent.impl.template.as_element = (function reagent$impl$template$as_element(x){\r\nif(reagent.impl.template.js_val_QMARK_(x)){\r\nreturn x;\r\n} else {\r\nif(cljs.core.vector_QMARK_(x)){\r\nreturn reagent.impl.template.vec_to_elem(x);\r\n} else {\r\nif(cljs.core.seq_QMARK_(x)){\r\nreturn (reagent.impl.template.expand_seq_check.cljs$core$IFn$_invoke$arity$1 ? reagent.impl.template.expand_seq_check.cljs$core$IFn$_invoke$arity$1(x) : reagent.impl.template.expand_seq_check.call(null,x));\r\n\r\n} else {\r\nif(reagent.impl.template.named_QMARK_(x)){\r\nreturn cljs.core.name(x);\r\n} else {\r\nif((((!((x == null))))?(((((x.cljs$lang$protocol_mask$partition0$ & (2147483648))) || ((cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IPrintWithWriter$))))?true:(((!x.cljs$lang$protocol_mask$partition0$))?cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,x):false)):cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,x))){\r\nreturn cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([x], 0));\r\n} else {\r\nreturn x;\r\n\r\n}\r\n}\r\n}\r\n}\r\n}\r\n});\r\n(reagent.impl.component.as_element = reagent.impl.template.as_element);\r\nreagent.impl.template.expand_seq = (function reagent$impl$template$expand_seq(s){\r\nvar a = cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(s);\r\nvar n__4741__auto___36759 = a.length;\r\nvar i_36760 = (0);\r\nwhile(true){\r\nif((i_36760 < n__4741__auto___36759)){\r\n(a[i_36760] = reagent.impl.template.as_element((a[i_36760])));\r\n\r\nvar G__36761 = (i_36760 + (1));\r\ni_36760 = G__36761;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nreturn a;\r\n});\r\nreagent.impl.template.expand_seq_dev = (function reagent$impl$template$expand_seq_dev(s,o){\r\nvar a = cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(s);\r\nvar n__4741__auto___36763 = a.length;\r\nvar i_36764 = (0);\r\nwhile(true){\r\nif((i_36764 < n__4741__auto___36763)){\r\nvar val_36765 = (a[i_36764]);\r\nif(((cljs.core.vector_QMARK_(val_36765)) && ((reagent.impl.template.key_from_vec(val_36765) == null)))){\r\n(o[\"no-key\"] = true);\r\n} else {\r\n}\r\n\r\n(a[i_36764] = reagent.impl.template.as_element(val_36765));\r\n\r\nvar G__36766 = (i_36764 + (1));\r\ni_36764 = G__36766;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nreturn a;\r\n});\r\nreagent.impl.template.expand_seq_check = (function reagent$impl$template$expand_seq_check(x){\r\nvar ctx = ({});\r\nvar vec__36728 = reagent.ratom.check_derefs((function (){\r\nreturn reagent.impl.template.expand_seq_dev(x,ctx);\r\n}));\r\nvar res = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36728,(0),null);\r\nvar derefed = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36728,(1),null);\r\nif(cljs.core.truth_(derefed)){\r\nif(reagent.debug.has_console){\r\n((reagent.debug.tracking)?reagent.debug.track_console:console).warn([\"Warning: \",reagent.impl.template.hiccup_err.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Reactive deref not supported in lazy seq, \",\"it should be wrapped in doall\"], 0))].join(''));\r\n} else {\r\n}\r\n} else {\r\n}\r\n\r\nif(cljs.core.truth_((ctx[\"no-key\"]))){\r\nif(reagent.debug.has_console){\r\n((reagent.debug.tracking)?reagent.debug.track_console:console).warn([\"Warning: \",reagent.impl.template.hiccup_err.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Every element in a seq should have a unique :key\"], 0))].join(''));\r\n} else {\r\n}\r\n} else {\r\n}\r\n\r\nreturn res;\r\n});\r\nreagent.impl.template.make_element = (function reagent$impl$template$make_element(argv,comp,jsprops,first_child){\r\nvar G__36731 = (cljs.core.count(argv) - first_child);\r\nswitch (G__36731) {\r\ncase (0):\r\nreturn module$node_modules$react$index.createElement(comp,jsprops);\r\n\r\nbreak;\r\ncase (1):\r\nreturn module$node_modules$react$index.createElement(comp,jsprops,reagent.impl.template.as_element(cljs.core.nth.cljs$core$IFn$_invoke$arity$3(argv,first_child,null)));\r\n\r\nbreak;\r\ndefault:\r\nreturn module$node_modules$react$index.createElement.apply(null,cljs.core.reduce_kv((function (a,k,v){\r\nif((k >= first_child)){\r\na.push(reagent.impl.template.as_element(v));\r\n} else {\r\n}\r\n\r\nreturn a;\r\n}),[comp,jsprops],argv));\r\n\r\n}\r\n});\r\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","reagent/impl/template.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",26],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.alpha","~$cljs.spec.alpha","~$react","~$module$node_modules$react$index","~$create-react-class","~$module$node_modules$create_react_class$index","~$react-dom","~$module$node_modules$react_dom$index"],"~:use-macros",["^ ","~$log","~$reagent.debug","~$warn-unless","^J","~$dbg","^J","~$$!","~$reagent.interop","~$prn","^J","~$warn","^J","~$dev?","^J","~$println","^J","~$$","^N"],"~:excludes",["~#set",[]],"~:name","~$reagent.impl.template","~:reader-aliases",["^ "],"~:op","~:ns","~:imports",null,"~:requires",["^ ","~$reagent.impl.util","^10","~$comp","~$reagent.impl.component","^N","^N","~$reagent.ratom","^13","^B","^C","~$cljs.core","^14","^C","^C","~$goog","^15","~$reagent.impl.batching","^16","^12","^12","~$util","^10","~$ratom","^13","~$string","~$clojure.string","~$batch","^16","^J","^J","^1:","^1:","~$clojure.walk","^1<"],"~:seen",["^T",["~:require"]],"~:uses",["^ ","~$prewalk","^1<","~$is-client","^10"],"~:require-macros",["^ ","^N","^N","^J","^J","^14","^14","^13","^13","^18","^13"],"~:form",["~#list",["~$ns","^V",["^1D",["^1>",["^B","~:as","^B"],["^1:","^1F","^19"],["^1<","~:refer",["^1@"]],["^10","^1F","^17","^1G",["^1A"]],["^12","^1F","^11"],["^16","^1F","^1;"],["^13","^1F","^18"],["^N","~:refer-macros",["~$$","^M"]],["^J","^1H",["^L","^O","^R","^I","^Q","^P","^K"]]]]]],"~:flags",["^ ","^1>",["^T",[]]],"~:js-deps",["^ "],"~:deps",["^15","^14","^C","^1:","^1<","^10","^12","^16","^13","^N","^J"]],"^Y","^V","~:resource-id",["~:shadow.build.classpath/resource","reagent/impl/template.cljs"],"~:compiled-at",1645079163677,"^W",["^ ","^10","^10","^11","^12","^N","^N","^13","^13","^B","^C","^14","^14","^C","^C","^15","^15","^16","^16","^12","^12","^17","^10","^18","^13","^19","^1:","^1;","^16","^J","^J","^1:","^1:","^1<","^1<"],"~:resource-name","reagent/impl/template.cljs","~:warnings",[],"~:source","(ns reagent.impl.template\n  (:require [react :as react]\n            [clojure.string :as string]\n            [clojure.walk :refer [prewalk]]\n            [reagent.impl.util :as util :refer [is-client]]\n            [reagent.impl.component :as comp]\n            [reagent.impl.batching :as batch]\n            [reagent.ratom :as ratom]\n            [reagent.interop :refer-macros [$ $!]]\n            [reagent.debug :refer-macros [dbg prn println log dev?\n                                          warn warn-unless]]))\n\n(declare as-element)\n\n;; From Weavejester's Hiccup, via pump:\n(def ^{:doc \"Regular expression that parses a CSS-style id and class\n             from a tag name.\"}\n  re-tag #\"([^\\s\\.#]+)(?:#([^\\s\\.#]+))?(?:\\.([^\\s#]+))?\")\n\n(deftype NativeWrapper [])\n\n\n;;; Common utilities\n\n(defn ^boolean named? [x]\n  (or (keyword? x)\n      (symbol? x)))\n\n(defn ^boolean hiccup-tag? [x]\n  (or (named? x)\n      (string? x)))\n\n(defn ^boolean valid-tag? [x]\n  (or (hiccup-tag? x)\n      (ifn? x)\n      (instance? NativeWrapper x)))\n\n\n;;; Props conversion\n\n(def prop-name-cache #js{:class \"className\"\n                         :for \"htmlFor\"\n                         :charset \"charSet\"})\n\n(defn cache-get [o k]\n  (when ^boolean (.hasOwnProperty o k)\n    (aget o k)))\n\n(defn cached-prop-name [k]\n  (if (named? k)\n    (if-some [k' (cache-get prop-name-cache (name k))]\n      k'\n      (aset prop-name-cache (name k)\n            (util/dash-to-camel k)))\n    k))\n\n(defn ^boolean js-val? [x]\n  (not (identical? \"object\" (goog/typeOf x))))\n\n(declare convert-prop-value)\n\n(defn kv-conv [o k v]\n  (doto o\n    (aset (cached-prop-name k)\n          (convert-prop-value v))))\n\n(defn convert-prop-value [x]\n  (cond (js-val? x) x\n        (named? x) (name x)\n        (map? x) (reduce-kv kv-conv #js{} x)\n        (coll? x) (clj->js x)\n        (ifn? x) (fn [& args]\n                   (apply x args))\n        :else (clj->js x)))\n\n;; Previous few functions copied for custom elements,\n;; without mapping from class to className etc.\n\n(def custom-prop-name-cache #js{})\n\n(defn cached-custom-prop-name [k]\n  (if (named? k)\n    (if-some [k' (cache-get custom-prop-name-cache (name k))]\n      k'\n      (aset custom-prop-name-cache (name k)\n            (util/dash-to-camel k)))\n    k))\n\n(defn custom-kv-conv [o k v]\n  (doto o\n    (aset (cached-custom-prop-name k)\n          (convert-prop-value v))))\n\n(defn convert-custom-prop-value [x]\n  (cond (js-val? x) x\n        (named? x) (name x)\n        (map? x) (reduce-kv custom-kv-conv #js{} x)\n        (coll? x) (clj->js x)\n        (ifn? x) (fn [& args]\n                   (apply x args))\n        :else (clj->js x)))\n\n(defn oset [o k v]\n  (doto (if (nil? o) #js{} o)\n    (aset k v)))\n\n(defn oget [o k]\n  (if (nil? o) nil (aget o k)))\n\n(defn set-id-class\n  \"Takes the id and class from tag keyword, and adds them to the\n  other props. Parsed tag is JS object with :id and :class properties.\"\n  [props id-class]\n  (let [id ($ id-class :id)\n        class ($ id-class :class)]\n    (cond-> props\n      ;; Only use ID from tag keyword if no :id in props already\n      (and (some? id)\n           (nil? (:id props)))\n      (assoc :id id)\n\n      ;; Merge classes\n      class\n      (assoc :class (let [old-class (:class props)]\n                      (if (nil? old-class) class (str class \" \" (if (named? old-class)\n                                                                  (name old-class)\n                                                                  old-class))))))))\n\n(defn stringify-class [{:keys [class] :as props}]\n  (if (coll? class)\n    (->> class\n         (keep (fn [c]\n                 (if c\n                   (if (named? c)\n                     (name c)\n                     c))))\n         (string/join \" \")\n         (assoc props :class))\n    props))\n\n(defn convert-props [props id-class]\n  (let [props (-> props\n                  stringify-class\n                  (set-id-class id-class))]\n    (if ($ id-class :custom)\n      (convert-custom-prop-value props)\n      (convert-prop-value props))))\n\n;;; Specialization for input components\n\n;; This gets set from reagent.dom\n(defonce find-dom-node nil)\n\n;; <input type=\"??\" >\n;; The properites 'selectionStart' and 'selectionEnd' only exist on some inputs\n;; See: https://html.spec.whatwg.org/multipage/forms.html#do-not-apply\n(def these-inputs-have-selection-api #{\"text\" \"textarea\" \"password\" \"search\"\n                                       \"tel\" \"url\"})\n\n(defn ^boolean has-selection-api?\n  [input-type]\n  (contains? these-inputs-have-selection-api input-type))\n\n(declare input-component-set-value)\n\n(defn input-node-set-value\n  [node rendered-value dom-value component {:keys [on-write]}]\n  (if-not (and (identical? node ($ js/document :activeElement))\n            (has-selection-api? ($ node :type))\n            (string? rendered-value)\n            (string? dom-value))\n    ;; just set the value, no need to worry about a cursor\n    (do\n      ($! component :cljsDOMValue rendered-value)\n      ($! node :value rendered-value)\n      (when (fn? on-write)\n        (on-write rendered-value)))\n\n    ;; Setting \"value\" (below) moves the cursor position to the\n    ;; end which gives the user a jarring experience.\n    ;;\n    ;; But repositioning the cursor within the text, turns out to\n    ;; be quite a challenge because changes in the text can be\n    ;; triggered by various events like:\n    ;; - a validation function rejecting a user inputted char\n    ;; - the user enters a lower case char, but is transformed to\n    ;;   upper.\n    ;; - the user selects multiple chars and deletes text\n    ;; - the user pastes in multiple chars, and some of them are\n    ;;   rejected by a validator.\n    ;; - the user selects multiple chars and then types in a\n    ;;   single new char to repalce them all.\n    ;; Coming up with a sane cursor repositioning strategy hasn't\n    ;; been easy ALTHOUGH in the end, it kinda fell out nicely,\n    ;; and it appears to sanely handle all the cases we could\n    ;; think of.\n    ;; So this is just a warning. The code below is simple\n    ;; enough, but if you are tempted to change it, be aware of\n    ;; all the scenarios you have handle.\n    (let [node-value ($ node :value)]\n      (if (not= node-value dom-value)\n        ;; IE has not notified us of the change yet, so check again later\n        (batch/do-after-render #(input-component-set-value component))\n        (let [existing-offset-from-end (- (count node-value)\n                                         ($ node :selectionStart))\n              new-cursor-offset        (- (count rendered-value)\n                                         existing-offset-from-end)]\n          ($! component :cljsDOMValue rendered-value)\n          ($! node :value rendered-value)\n          (when (fn? on-write)\n            (on-write rendered-value))\n          ($! node :selectionStart new-cursor-offset)\n          ($! node :selectionEnd new-cursor-offset))))))\n\n(defn input-component-set-value [this]\n  (when ($ this :cljsInputLive)\n    ($! this :cljsInputDirty false)\n    (let [rendered-value ($ this :cljsRenderedValue)\n          dom-value ($ this :cljsDOMValue)\n          ;; Default to the root node within this component\n          node (find-dom-node this)]\n      (when (not= rendered-value dom-value)\n        (input-node-set-value node rendered-value dom-value this {})))))\n\n(defn input-handle-change [this on-change e]\n  ($! this :cljsDOMValue (-> e .-target .-value))\n  ;; Make sure the input is re-rendered, in case on-change\n  ;; wants to keep the value unchanged\n  (when-not ($ this :cljsInputDirty)\n    ($! this :cljsInputDirty true)\n    (batch/do-after-render #(input-component-set-value this)))\n  (on-change e))\n\n(defn input-render-setup\n  [this jsprops]\n  ;; Don't rely on React for updating \"controlled inputs\", since it\n  ;; doesn't play well with async rendering (misses keystrokes).\n  (when (and (some? jsprops)\n             (.hasOwnProperty jsprops \"onChange\")\n             (.hasOwnProperty jsprops \"value\"))\n    (assert find-dom-node\n            \"reagent.dom needs to be loaded for controlled input to work\")\n    (let [v ($ jsprops :value)\n          value (if (nil? v) \"\" v)\n          on-change ($ jsprops :onChange)]\n      (when-not ($ this :cljsInputLive)\n        ;; set initial value\n        ($! this :cljsInputLive true)\n        ($! this :cljsDOMValue value))\n      ($! this :cljsRenderedValue value)\n      (js-delete jsprops \"value\")\n      (doto jsprops\n        ($! :defaultValue value)\n        ($! :onChange #(input-handle-change this on-change %))))))\n\n(defn input-unmount [this]\n  ($! this :cljsInputLive nil))\n\n(defn ^boolean input-component? [x]\n  (case x\n    (\"input\" \"textarea\") true\n    false))\n\n(def reagent-input-class nil)\n\n(declare make-element)\n\n(def input-spec\n  {:display-name \"ReagentInput\"\n   :component-did-update input-component-set-value\n   :component-will-unmount input-unmount\n   :reagent-render\n   (fn [argv comp jsprops first-child]\n     (let [this comp/*current-component*]\n       (input-render-setup this jsprops)\n       (make-element argv comp jsprops first-child)))})\n\n(defn reagent-input\n  []\n  (when (nil? reagent-input-class)\n    (set! reagent-input-class (comp/create-class input-spec)))\n  reagent-input-class)\n\n\n;;; Conversion from Hiccup forms\n\n(defn parse-tag [hiccup-tag]\n  (let [[tag id class] (->> hiccup-tag name (re-matches re-tag) next)\n        class (when-not (nil? class)\n                (string/replace class #\"\\.\" \" \"))]\n    (assert tag (str \"Invalid tag: '\" hiccup-tag \"'\"\n                     (comp/comp-name)))\n    #js {:name tag\n         :id id\n         :class class\n         ;; Custom element names must contain hyphen\n         ;; https://www.w3.org/TR/custom-elements/#custom-elements-core-concepts\n         :custom (not= -1 (.indexOf tag \"-\"))}))\n\n(defn try-get-key [x]\n  ;; try catch to avoid clojurescript peculiarity with\n  ;; sorted-maps with keys that are numbers\n  (try (get x :key)\n       (catch :default e)))\n\n(defn get-key [x]\n  (when (map? x)\n    (try-get-key x)))\n\n(defn key-from-vec [v]\n  (if-some [k (-> (meta v) get-key)]\n    k\n    (-> v (nth 1 nil) get-key)))\n\n(defn reag-element [tag v]\n  (let [c (comp/as-class tag)\n        jsprops #js{:argv v}]\n    (when-some [key (key-from-vec v)]\n      ($! jsprops :key key))\n    (react/createElement c jsprops)))\n\n(defn fragment-element [argv]\n  (let [props (nth argv 1 nil)\n        hasprops (or (nil? props) (map? props))\n        jsprops (convert-prop-value (if hasprops props))\n        first-child (+ 1 (if hasprops 1 0))]\n    (when-some [key (key-from-vec argv)]\n      (oset jsprops \"key\" key))\n    (make-element argv react/Fragment jsprops first-child)))\n\n(defn adapt-react-class\n  [c]\n  (doto (->NativeWrapper)\n    ($! :name c)\n    ($! :id nil)\n    ($! :class nil)))\n\n(def tag-name-cache #js{})\n\n(defn cached-parse [x]\n  (if-some [s (cache-get tag-name-cache x)]\n    s\n    (aset tag-name-cache x (parse-tag x))))\n\n(defn native-element [parsed argv first]\n  (let [comp ($ parsed :name)]\n    (let [props (nth argv first nil)\n          hasprops (or (nil? props) (map? props))\n          jsprops (convert-props (if hasprops props) parsed)\n          first-child (+ first (if hasprops 1 0))]\n      (if (input-component? comp)\n        (-> [(reagent-input) argv comp jsprops first-child]\n            (with-meta (meta argv))\n            as-element)\n        (let [key (-> (meta argv) get-key)\n              p (if (nil? key)\n                  jsprops\n                  (oset jsprops \"key\" key))]\n          (make-element argv comp p first-child))))))\n\n(defn str-coll [coll]\n  (if (dev?)\n    (str (prewalk (fn [x]\n                    (if (fn? x)\n                      (let [n (util/fun-name x)]\n                        (case n \"\" x (symbol n)))\n                      x)) coll))\n    (str coll)))\n\n(defn hiccup-err [v & msg]\n  (str (apply str msg) \": \" (str-coll v) \"\\n\" (comp/comp-name)))\n\n(defn vec-to-elem [v]\n  (assert (pos? (count v)) (hiccup-err v \"Hiccup form should not be empty\"))\n  (let [tag (nth v 0 nil)]\n    (assert (valid-tag? tag) (hiccup-err v \"Invalid Hiccup form\"))\n    (cond\n      (keyword-identical? :<> tag)\n      (fragment-element v)\n\n      (hiccup-tag? tag)\n      (let [n (name tag)\n            pos (.indexOf n \">\")]\n        (case pos\n          -1 (native-element (cached-parse n) v 1)\n          ;; TODO: Doesn't this match :>foo or any keyword starting with >\n          0 (let [comp (nth v 1 nil)]\n              ;; Support [:> comp ...]\n              (assert (= \">\" n) (hiccup-err v \"Invalid Hiccup tag\"))\n              (native-element #js{:name comp} v 2))\n          ;; Support extended hiccup syntax, i.e :div.bar>a.foo\n          ;; Apply metadata (e.g. :key) to the outermost element.\n          ;; Metadata is probably used only with sequeneces, and in that case\n          ;; only the key of the outermost element matters.\n          (recur (with-meta [(subs n 0 pos)\n                             (assoc (with-meta v nil) 0 (subs n (inc pos)))]\n                            (meta v)))))\n\n      (instance? NativeWrapper tag)\n      (native-element tag v 1)\n\n      :else (reag-element tag v))))\n\n(declare expand-seq)\n(declare expand-seq-check)\n\n(defn as-element [x]\n  (cond (js-val? x) x\n        (vector? x) (vec-to-elem x)\n        (seq? x) (if (dev?)\n                   (expand-seq-check x)\n                   (expand-seq x))\n        (named? x) (name x)\n        (satisfies? IPrintWithWriter x) (pr-str x)\n        :else x))\n\n(set! comp/as-element as-element)\n\n(defn expand-seq [s]\n  (let [a (into-array s)]\n    (dotimes [i (alength a)]\n      (aset a i (as-element (aget a i))))\n    a))\n\n(defn expand-seq-dev [s o]\n  (let [a (into-array s)]\n    (dotimes [i (alength a)]\n      (let [val (aget a i)]\n        (when (and (vector? val)\n                   (nil? (key-from-vec val)))\n          ($! o :no-key true))\n        (aset a i (as-element val))))\n    a))\n\n(defn expand-seq-check [x]\n  (let [ctx #js{}\n        [res derefed] (ratom/check-derefs #(expand-seq-dev x ctx))]\n    (when derefed\n      (warn (hiccup-err x \"Reactive deref not supported in lazy seq, \"\n                        \"it should be wrapped in doall\")))\n    (when ($ ctx :no-key)\n      (warn (hiccup-err x \"Every element in a seq should have a unique :key\")))\n    res))\n\n;; From https://github.com/babel/babel/commit/1d0e68f5a19d721fe8799b1ea331041d8bf9120e\n;; (def react-element-type (or (and (exists? js/Symbol)\n;;                                  ($ js/Symbol :for)\n;;                                  ($ js/Symbol for \"react.element\"))\n;;                             60103))\n\n;; (defn make-element-fast [argv comp jsprops first-child]\n;;   (let [key (some-> jsprops ($ :key))\n;;         ref (some-> jsprops ($ :ref))\n;;         props (if (nil? jsprops) (js-obj) jsprops)]\n;;     ($! props :children\n;;         (case (- (count argv) first-child)\n;;           0 nil\n;;           1 (as-element (nth argv first-child))\n;;           (reduce-kv (fn [a k v]\n;;                        (when (>= k first-child)\n;;                          (.push a (as-element v)))\n;;                        a)\n;;                      #js[] argv)))\n;;     (js-obj \"key\" key\n;;             \"ref\" ref\n;;             \"props\" props\n;;             \"$$typeof\" react-element-type\n;;             \"type\" comp\n;;             ;; \"_store\" (js-obj)\n;;             )))\n\n(defn make-element [argv comp jsprops first-child]\n  (case (- (count argv) first-child)\n    ;; Optimize cases of zero or one child\n    0 (react/createElement comp jsprops)\n\n    1 (react/createElement comp jsprops\n          (as-element (nth argv first-child nil)))\n\n    (.apply react/createElement nil\n            (reduce-kv (fn [a k v]\n                         (when (>= k first-child)\n                           (.push a (as-element v)))\n                         a)\n                       #js[comp jsprops] argv))))\n","~:reader-features",["^T",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["reagent.impl.template/re-tag","this__4491__auto__","writer__4492__auto__","opt__4493__auto__","cljs.core/-write","reagent.impl.template/NativeWrapper","reagent.impl.template/->NativeWrapper","reagent.impl.template/named?","x","cljs.core/Keyword","cljs.core/Symbol","reagent.impl.template/hiccup-tag?","reagent.impl.template/valid-tag?","cljs.core/ifn?","reagent.impl.template/prop-name-cache","reagent.impl.template/cache-get","o","k","reagent.impl.template/cached-prop-name","temp__5755__auto__","k'","cljs.core/name","reagent.impl.util/dash-to-camel","reagent.impl.template/js-val?","goog/typeOf","reagent.impl.template/kv-conv","v","G__36705","reagent.impl.template/convert-prop-value","cljs.core/map?","cljs.core/reduce-kv","cljs.core/coll?","cljs.core/clj->js","args","cljs.core.apply","reagent.impl.template/custom-prop-name-cache","reagent.impl.template/cached-custom-prop-name","reagent.impl.template/custom-kv-conv","G__36706","reagent.impl.template/convert-custom-prop-value","reagent.impl.template/oset","G__36707","reagent.impl.template/oget","reagent.impl.template/set-id-class","props","id-class","id","class","G__36708","cljs.core.assoc","old-class","p__36709","map__36710","cljs.core/--destructure-map","cljs.core.get","reagent.impl.template/stringify-class","cljs.core.keep","c","clojure.string.join","reagent.impl.template/convert-props","js/reagent","js/reagent.impl","js/reagent.impl.template","js/reagent.impl.template.find-dom-node","reagent.impl.template/find-dom-node","reagent.impl.template/these-inputs-have-selection-api","reagent.impl.template/has-selection-api?","input-type","cljs.core/contains?","p__36711","map__36712","reagent.impl.template/input-node-set-value","node","rendered-value","dom-value","component","on-write","js/document","cljs.core/fn?","node-value","cljs.core.not_EQ_","reagent.impl.batching/do-after-render","reagent.impl.template/input-component-set-value","existing-offset-from-end","cljs.core/count","new-cursor-offset","this","reagent.impl.template/input-handle-change","on-change","e","reagent.impl.template/input-render-setup","jsprops","and__4251__auto__","js/Error","value","G__36714","p1__36713#","reagent.impl.template/input-unmount","reagent.impl.template/input-component?","G__36715","reagent.impl.template/reagent-input-class","reagent.impl.template/input-spec","argv","comp","first-child","reagent.impl.component/*current-component*","reagent.impl.template/make-element","reagent.impl.template/reagent-input","reagent.impl.component/create-class","reagent.impl.template/parse-tag","hiccup-tag","vec__36716","cljs.core.nth","tag","cljs.core/re-matches","cljs.core/next","clojure.string/replace","reagent.impl.component/comp-name","reagent.impl.template/try-get-key","e36719","reagent.impl.template/get-key","reagent.impl.template/key-from-vec","cljs.core/meta","reagent.impl.template/reag-element","reagent.impl.component/as-class","temp__5757__auto__","key","js/module$node_modules$react$index.createElement","reagent.impl.template/fragment-element","hasprops","js/module$node_modules$react$index.Fragment","reagent.impl.template/adapt-react-class","G__36720","reagent.impl.template/tag-name-cache","reagent.impl.template/cached-parse","s","reagent.impl.template/native-element","parsed","first","G__36721","cljs.core/with-meta","reagent.impl.template/as-element","p","reagent.impl.template/str-coll","coll","clojure.walk/prewalk","n","reagent.impl.util/fun-name","G__36723","cljs.core.symbol","var_args","args__4870__auto__","len__4864__auto__","i__4865__auto__","argseq__4871__auto__","cljs.core/IndexedSeq","reagent.impl.template/hiccup-err","seq36724","G__36725","cljs.core/first","self__4851__auto__","msg","cljs.core/str","reagent.impl.template/vec-to-elem","reagent.impl.template.hiccup_err","cljs.core/keyword-identical?","pos","G__36726","cljs.core._EQ_","cljs.core.subs","cljs.core/vector?","cljs.core/seq?","reagent.impl.template/expand-seq-check","cljs.core/PROTOCOL_SENTINEL","cljs.core/native-satisfies?","cljs.core/IPrintWithWriter","cljs.core.pr_str","reagent.impl.component/as-element","reagent.impl.template/expand-seq","a","cljs.core.into_array","n__4741__auto__","i","reagent.impl.template/expand-seq-dev","val","vec__36728","ctx","res","derefed","reagent.ratom/check-derefs","reagent.debug/has-console","reagent.debug/tracking","reagent.debug/track-console","js/console","G__36731"]],"~:used-vars",["^T",["~$cljs.core/--destructure-map","~$cljs.core/keep","~$reagent.impl.template/reagent-input","~$clojure.string/join","~$reagent.impl.component/as-class","~$cljs.core/PROTOCOL_SENTINEL","~$reagent.impl.template/tag-name-cache","~$reagent.impl.template/vec-to-elem","~$js/document","~$reagent.impl.template/expand-seq","~$cljs.core/str","~$reagent.ratom/check-derefs","~$reagent.impl.template/prop-name-cache","~$reagent.impl.template/input-handle-change","~$reagent.impl.template/find-dom-node","~$cljs.core/vector?","~$cljs.core/=","~$cljs.core/ifn?","~$js/reagent.impl.template.find-dom-node","~$reagent.impl.template/key-from-vec","~$cljs.core/into-array","~$cljs.core/re-matches","~$reagent.impl.template/make-element","~$reagent.impl.template/oget","~$clojure.walk/prewalk","~$reagent.impl.template/parse-tag","~$reagent.impl.template/kv-conv","~$cljs.core/-write","~$reagent.impl.template/named?","~$cljs.core/IndexedSeq","~$reagent.impl.template/input-spec","~$reagent.impl.util/dash-to-camel","~$reagent.impl.template/convert-prop-value","~$cljs.core/count","~$goog/typeOf","~$cljs.core/apply","~$cljs.core/Keyword","~$reagent.impl.template/fragment-element","~$cljs.core/not=","~$cljs.core/keyword-identical?","~$reagent.impl.template/input-render-setup","~$reagent.debug/has-console","~$js/reagent","~$cljs.core/pr-str","~$reagent.impl.component/comp-name","~$js/module$node_modules$react$index.createElement","~$js/console","~$reagent.impl.template/try-get-key","~$reagent.impl.template/input-component-set-value","~$cljs.core/native-satisfies?","~$reagent.impl.template/valid-tag?","~$cljs.core/contains?","~$reagent.impl.template/js-val?","~$cljs.core/map?","~$reagent.impl.template/expand-seq-dev","~$reagent.impl.template/cached-prop-name","~$cljs.core/with-meta","~$reagent.impl.template/cached-custom-prop-name","~$reagent.impl.template/input-component?","~$cljs.core/fn?","~$reagent.impl.template/reagent-input-class","~$reagent.impl.template/custom-kv-conv","~$cljs.core/get","~$js/module$node_modules$react$index.Fragment","~$reagent.debug/tracking","~$reagent.impl.template/expand-seq-check","~$js/reagent.impl","~$reagent.impl.template/custom-prop-name-cache","~$reagent.impl.template/cached-parse","~$cljs.core/clj->js","~$cljs.core/symbol","~$reagent.debug/track-console","~$reagent.impl.template/stringify-class","~$reagent.impl.component/create-class","~$reagent.impl.template/adapt-react-class","~$reagent.impl.template/oset","~$cljs.core/nth","~$cljs.core/meta","~$reagent.impl.template/has-selection-api?","~$reagent.impl.template/str-coll","~$js/reagent.impl.template","~$reagent.impl.template/get-key","~$clojure.string/replace","~$reagent.impl.template/re-tag","~$cljs.core/next","~$reagent.impl.template/reag-element","~$reagent.impl.template/these-inputs-have-selection-api","~$reagent.impl.template/native-element","~$reagent.impl.util/fun-name","~$cljs.core/not","~$reagent.impl.template/NativeWrapper","~$reagent.impl.template/->NativeWrapper","~$cljs.core/IPrintWithWriter","~$reagent.impl.template/cache-get","~$cljs.core/assoc","~$cljs.core/Symbol","~$reagent.impl.template/input-node-set-value","~$reagent.impl.component/*current-component*","~$reagent.impl.template/hiccup-err","~$cljs.core/coll?","~$reagent.impl.template/convert-props","~$cljs.core/reduce-kv","~$cljs.core/first","~$cljs.core/seq?","~$reagent.impl.batching/do-after-render","~$cljs.core/name","~$cljs.core/subs","~$reagent.impl.component/as-element","~$reagent.impl.template/input-unmount","~$reagent.impl.template/hiccup-tag?","~$js/Error","~$reagent.impl.template/set-id-class","~$reagent.impl.template/convert-custom-prop-value","~$reagent.impl.template/as-element"]]],"~:cache-keys",["~#cmap",[["^1M","reagent/impl/batching.cljs"],["417ad50ab1583aeb00751336948481695582950e","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^T",[]],"~:deps-syms",["^15","^14","^J","^N","^10","^1:"]]],["^1M","goog/dom/tagname.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4I",["^ ","^4J",null,"^4K",["^T",[]],"^4L",["^15","~$goog.dom.HtmlElement"]]],["^1M","goog/html/trustedtypes.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4I",["^ ","^4J",null,"^4K",["^T",[]],"^4L",["^15"]]],["^1M","goog/labs/useragent/browser.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4I",["^ ","^4J",null,"^4K",["^T",[]],"^4L",["^15","~$goog.array","~$goog.object","~$goog.labs.userAgent.util","~$goog.string.internal"]]],["^1M","goog/html/safeurl.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4I",["^ ","^4J",null,"^4K",["^T",[]],"^4L",["^15","~$goog.asserts","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^4Q"]]],["^1M","goog/array/array.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4I",["^ ","^4J",null,"^4K",["^T",[]],"^4L",["^15","^4R"]]],["~:shadow.build.npm/resource","node_modules/prop-types/checkPropTypes.js"],["1c6e82d3f9756822c3b08dd8f8e1d7c23a7f1630","3679a1a898d0c80b330819274df3fe1302fa19d1","bc33c949bf3e8df11ab0bf5db55467128445adbc","^4I",["^ ","^4J",null,"^4K",["^T",[]],"^4L",["~$shadow.js","~$module$node_modules$prop_types$lib$ReactPropTypesSecret","~$module$node_modules$prop_types$lib$has"]]],["^1M","reagent/impl/util.cljs"],["417ad50ab1583aeb00751336948481695582950e","^4I",["^ ","^4J",null,"^4K",["^T",[]],"^4L",["^15","^14","^J","^N","^1:"]]],["^1M","goog/debug/error.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4I",["^ ","^4J",null,"^4K",["^T",[]],"^4L",["^15"]]],["^1M","goog/dom/nodetype.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4I",["^ ","^4J",null,"^4K",["^T",[]],"^4L",["^15"]]],["^1M","reagent/ratom.cljs"],["417ad50ab1583aeb00751336948481695582950e","^4I",["^ ","^4J",null,"^4K",["^T",[]],"^4L",["^15","^14","^10","^J","^16","~$clojure.set"]]],["^1M","goog/string/typedstring.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4I",["^ ","^4J",null,"^4K",["^T",[]],"^4L",["^15"]]],["^4Y","node_modules/create-react-class/factory.js"],["1c6e82d3f9756822c3b08dd8f8e1d7c23a7f1630","3679a1a898d0c80b330819274df3fe1302fa19d1","d72f12f2bd3d0f344ec47165b99329bd39307659","^4I",["^ ","^4J",null,"^4K",["^T",[]],"^4L",["^4Z","~$module$node_modules$object_assign$index"]]],["^4Y","node_modules/react/index.js"],["1c6e82d3f9756822c3b08dd8f8e1d7c23a7f1630","3679a1a898d0c80b330819274df3fe1302fa19d1","a69a7f3d4a4636bf9035bc53c05b2d99a7b8af7f","^4I",["^ ","^4J",null,"^4K",["^T",[]],"^4L",["^4Z","~$module$node_modules$react$cjs$react_production_min","~$module$node_modules$react$cjs$react_development"]]],["^1M","shadow/js.js"],["451a8c3cab09b9427d275f951dc5f5a479223a5b","^4I",["^ ","^4J",null,"^4K",["^T",[]],"^4L",["^15"]]],["^1M","goog/object/object.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4I",["^ ","^4J",null,"^4K",["^T",[]],"^4L",["^15"]]],["^1M","reagent/impl/template.cljs"],["417ad50ab1583aeb00751336948481695582950e","^4I",["^ ","^4J",null,"^4K",["^T",[]],"^4L",["^15","^14","^C","^1:","^1<","^10","^12","^16","^13","^N","^J"]]],["^1M","goog/dom/asserts.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4I",["^ ","^4J",null,"^4K",["^T",[]],"^4L",["^15","^4R"]]],"~:SHADOW-TIMESTAMP",[1641537113000,1641537113000,1641537100000],["^4Y","node_modules/react/cjs/react.development.js"],["1c6e82d3f9756822c3b08dd8f8e1d7c23a7f1630","3679a1a898d0c80b330819274df3fe1302fa19d1","d1d233cae1042d71677d46133980090e304d224b","^4I",["^ ","^4J",null,"^4K",["^T",[]],"^4L",["^4Z","^52","~$module$node_modules$prop_types$checkPropTypes"]]],["^1M","goog/math/long.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4I",["^ ","^4J",null,"^4K",["^T",[]],"^4L",["^15","^4R","~$goog.reflect"]]],["^1M","goog/html/trustedresourceurl.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4I",["^ ","^4J",null,"^4K",["^T",[]],"^4L",["^15","^4R","~$goog.fs.blob","^4S","~$goog.html.SafeScript","~$goog.html.trustedtypes","^4U","^4V","^4W","^4X"]]],["^1M","goog/string/internal.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4I",["^ ","^4J",null,"^4K",["^T",[]],"^4L",["^15"]]],["^1M","goog/functions/functions.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4I",["^ ","^4J",null,"^4K",["^T",[]],"^4L",["^15"]]],["^1M","goog/html/safestyle.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4I",["^ ","^4J",null,"^4K",["^T",[]],"^4L",["^15","^4W","~$goog.html.SafeUrl","^4X","^4R","^4Q"]]],["^1M","goog/dom/safe.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4I",["^ ","^4J",null,"^4K",["^T",[]],"^4L",["^15","^4R","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^59","~$goog.html.SafeStyle","^5;","^4T","~$goog.html.uncheckedconversions","^4W","^4Q"]]],["^1M","reagent/impl/component.cljs"],["417ad50ab1583aeb00751336948481695582950e","^4I",["^ ","^4J",null,"^4K",["^T",[]],"^4L",["^15","^14","^E","^C","^10","^16","^13","^N","^J"]]],["^1M","clojure/walk.cljs"],["e2ad9a4500a5ecabaf01429c4f0d6f7fac146951","^4I",["^ ","^4J",null,"^4K",["^T",[]],"^4L",["^15","^14"]]],["^1M","goog/html/safehtml.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4I",["^ ","^4J",null,"^4K",["^T",[]],"^4L",["^15","^4W","^4U","^4V","^59","^5?","~$goog.html.SafeStyleSheet","^5;","~$goog.dom.TagName","^4T","^4X","^4R","~$goog.labs.userAgent.browser","^4N","^4O","^4Q","~$goog.dom.tags","^5:"]]],["^1M","goog/dom/tags.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4I",["^ ","^4J",null,"^4K",["^T",[]],"^4L",["^15","^4O"]]],["^1M","goog/fs/blob.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4I",["^ ","^4J",null,"^4K",["^T",[]],"^4L",["^15"]]],["^1M","goog/asserts/asserts.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4I",["^ ","^4J",null,"^4K",["^T",[]],"^4L",["^15","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1M","goog/uri/uri.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4I",["^ ","^4J",null,"^4K",["^T",[]],"^4L",["^15","^4N","^4R","~$goog.collections.maps","~$goog.string","~$goog.structs","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1M","goog/collections/maps.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4I",["^ ","^4J",null,"^4K",["^T",[]],"^4L",["^15"]]],["^1M","goog/i18n/bidi.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4I",["^ ","^4J",null,"^4K",["^T",[]],"^4L",["^15"]]],["^4Y","node_modules/object-assign/index.js"],["1c6e82d3f9756822c3b08dd8f8e1d7c23a7f1630","3679a1a898d0c80b330819274df3fe1302fa19d1","519ffd5a4c91b67302cc9947b794966d629860cd","^4I",["^ ","^4J",null,"^4K",["^T",[]],"^4L",["^4Z"]]],["^1M","goog/fs/url.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4I",["^ ","^4J",null,"^4K",["^T",[]],"^4L",["^15"]]],["^1M","goog/base.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4I",["^ ","^4J",null,"^4K",["^T",[]],"^4L",[]]],["^4Y","node_modules/prop-types/lib/has.js"],["1c6e82d3f9756822c3b08dd8f8e1d7c23a7f1630","3679a1a898d0c80b330819274df3fe1302fa19d1","9f779c2d805f87f29657698374d8b9bd92618d1b","^4I",["^ ","^4J",null,"^4K",["^T",[]],"^4L",["^4Z"]]],["^1M","goog/structs/structs.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4I",["^ ","^4J",null,"^4K",["^T",[]],"^4L",["^15","^4N","^4O"]]],["^1M","clojure/string.cljs"],["e2ad9a4500a5ecabaf01429c4f0d6f7fac146951","^4I",["^ ","^4J",null,"^4K",["^T",[]],"^4L",["^15","^14","^5H","~$goog.string.StringBuffer"]]],["^4Y","node_modules/create-react-class/index.js"],["1c6e82d3f9756822c3b08dd8f8e1d7c23a7f1630","3679a1a898d0c80b330819274df3fe1302fa19d1","a7020dbd19046ce80d5d792de4a772ebcb222749","^4I",["^ ","^4J",null,"^4K",["^T",[]],"^4L",["^4Z","^C","~$module$node_modules$create_react_class$factory"]]],["^4Y","node_modules/react/cjs/react.production.min.js"],["1c6e82d3f9756822c3b08dd8f8e1d7c23a7f1630","3679a1a898d0c80b330819274df3fe1302fa19d1","9d368af337607ffd9e708bbc85f34f14abf56368","^4I",["^ ","^4J",null,"^4K",["^T",[]],"^4L",["^4Z","^52"]]],["^1M","goog/string/string.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4I",["^ ","^4J",null,"^4K",["^T",[]],"^4L",["^15","~$goog.dom.safe","^5@","^4W","^4Q"]]],["^1M","goog/reflect/reflect.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4I",["^ ","^4J",null,"^4K",["^T",[]],"^4L",["^15"]]],["^1M","goog/labs/useragent/util.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4I",["^ ","^4J",null,"^4K",["^T",[]],"^4L",["^15","~$goog.labs.userAgent","^4Q"]]],["^1M","goog/string/stringbuffer.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4I",["^ ","^4J",null,"^4K",["^T",[]],"^4L",["^15"]]],["^1M","goog/labs/useragent/useragent.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4I",["^ ","^4J",null,"^4K",["^T",[]],"^4L",["^15"]]],["^1M","goog/html/uncheckedconversions.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4I",["^ ","^4J",null,"^4K",["^T",[]],"^4L",["^15","^4R","^5>","^59","^5?","^5A","^5;","^4T","^4W","^4Q","^4U"]]],["^4Y","node_modules/prop-types/lib/ReactPropTypesSecret.js"],["1c6e82d3f9756822c3b08dd8f8e1d7c23a7f1630","3679a1a898d0c80b330819274df3fe1302fa19d1","4eec230c5b56ef580ea9c3e7ae6358ba1f8bdbec","^4I",["^ ","^4J",null,"^4K",["^T",[]],"^4L",["^4Z"]]],["^1M","reagent/interop.cljs"],["417ad50ab1583aeb00751336948481695582950e","^4I",["^ ","^4J",null,"^4K",["^T",[]],"^4L",["^15","^14"]]],["^1M","goog/dom/htmlelement.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4I",["^ ","^4J",null,"^4K",["^T",[]],"^4L",["^15"]]],["^1M","cljs/core.cljs"],["e2ad9a4500a5ecabaf01429c4f0d6f7fac146951","^4I",["^ ","^4J",null,"^4K",["^T",[]],"^4L",["^15","~$goog.math.Long","~$goog.math.Integer","^5H","^4O","^4N","~$goog.Uri","^5M"]]],["^1M","goog/html/safescript.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4I",["^ ","^4J",null,"^4K",["^T",[]],"^4L",["^15","^4W","^4X","^5:","^4R"]]],["^1M","reagent/debug.cljs"],["417ad50ab1583aeb00751336948481695582950e","^4I",["^ ","^4J",null,"^4K",["^T",[]],"^4L",["^15","^14"]]],["^1M","goog/html/safestylesheet.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4I",["^ ","^4J",null,"^4K",["^T",[]],"^4L",["^15","^4W","^5?","^4X","^4O","^4R","^4Q"]]],["^1M","goog/math/integer.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4I",["^ ","^4J",null,"^4K",["^T",[]],"^4L",["^15","^57"]]],["^1M","clojure/set.cljs"],["e2ad9a4500a5ecabaf01429c4f0d6f7fac146951","^4I",["^ ","^4J",null,"^4K",["^T",[]],"^4L",["^15","^14"]]],["^1M","goog/uri/utils.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4I",["^ ","^4J",null,"^4K",["^T",[]],"^4L",["^15","^4R","^5H"]]],["^1M","goog/string/const.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4I",["^ ","^4J",null,"^4K",["^T",[]],"^4L",["^15","^4R","^4X"]]]]],"~:clj-info",["^ ","jar:file:/C:/Users/Sanjay/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/default_data_readers.clj",1641537042000,"jar:file:/C:/Users/Sanjay/.m2/repository/reagent/reagent/0.8.1/reagent-0.8.1.jar!/reagent/ratom.clj",1641537115000,"jar:file:/C:/Users/Sanjay/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/string.clj",1641368956000,"jar:file:/C:/Users/Sanjay/.m2/repository/org/clojure/clojurescript/1.10.914/clojurescript-1.10.914.jar!/cljs/instant.clj",1641537100000,"jar:file:/C:/Users/Sanjay/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader.clj",1641537042000,"jar:file:/C:/Users/Sanjay/.m2/repository/reagent/reagent/0.8.1/reagent-0.8.1.jar!/reagent/debug.clj",1641537115000,"jar:file:/C:/Users/Sanjay/.m2/repository/org/clojure/data.json/2.4.0/data.json-2.4.0.jar!/clojure/data/json.clj",1641537069000,"jar:file:/C:/Users/Sanjay/.m2/repository/org/clojure/clojurescript/1.10.914/clojurescript-1.10.914.jar!/cljs/core.cljc",1641537100000,"jar:file:/C:/Users/Sanjay/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/reader_types.clj",1641537042000,"jar:file:/C:/Users/Sanjay/.m2/repository/org/clojure/clojurescript/1.10.914/clojurescript-1.10.914.jar!/cljs/analyzer/passes/and_or.cljc",1641537100000,"jar:file:/C:/Users/Sanjay/.m2/repository/reagent/reagent/0.8.1/reagent-0.8.1.jar!/reagent/interop.clj",1641537115000,"jar:file:/C:/Users/Sanjay/.m2/repository/org/clojure/clojurescript/1.10.914/clojurescript-1.10.914.jar!/cljs/env.cljc",1641537100000,"jar:file:/C:/Users/Sanjay/.m2/repository/org/clojure/clojurescript/1.10.914/clojurescript-1.10.914.jar!/cljs/externs.clj",1641537100000,"jar:file:/C:/Users/Sanjay/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/errors.clj",1641537042000,"jar:file:/C:/Users/Sanjay/.m2/repository/org/clojure/clojurescript/1.10.914/clojurescript-1.10.914.jar!/cljs/source_map/base64_vlq.clj",1641537100000,"jar:file:/C:/Users/Sanjay/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/java/io.clj",1641368956000,"jar:file:/C:/Users/Sanjay/.m2/repository/org/clojure/clojurescript/1.10.914/clojurescript-1.10.914.jar!/cljs/tagged_literals.cljc",1641537100000,"jar:file:/C:/Users/Sanjay/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/instant.clj",1641368956000,"jar:file:/C:/Users/Sanjay/.m2/repository/org/clojure/clojurescript/1.10.914/clojurescript-1.10.914.jar!/cljs/analyzer/impl.cljc",1641537100000,"jar:file:/C:/Users/Sanjay/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/inspect.clj",1641537042000,"jar:file:/C:/Users/Sanjay/.m2/repository/org/clojure/clojurescript/1.10.914/clojurescript-1.10.914.jar!/cljs/compiler.cljc",1641537100000,"jar:file:/C:/Users/Sanjay/.m2/repository/org/clojure/clojurescript/1.10.914/clojurescript-1.10.914.jar!/cljs/util.cljc",1641537100000,"jar:file:/C:/Users/Sanjay/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/set.clj",1641368956000,"jar:file:/C:/Users/Sanjay/.m2/repository/org/clojure/clojurescript/1.10.914/clojurescript-1.10.914.jar!/cljs/analyzer/passes.cljc",1641537100000,"jar:file:/C:/Users/Sanjay/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/core.clj",1641368956000,"jar:file:/C:/Users/Sanjay/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/edn.clj",1641368956000,"jar:file:/C:/Users/Sanjay/.m2/repository/org/clojure/clojurescript/1.10.914/clojurescript-1.10.914.jar!/cljs/source_map.clj",1641537100000,"jar:file:/C:/Users/Sanjay/.m2/repository/org/clojure/clojurescript/1.10.914/clojurescript-1.10.914.jar!/cljs/analyzer.cljc",1641537100000,"jar:file:/C:/Users/Sanjay/.m2/repository/org/clojure/clojurescript/1.10.914/clojurescript-1.10.914.jar!/cljs/js_deps.cljc",1641537100000,"jar:file:/C:/Users/Sanjay/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/pprint.clj",1641368956000,"jar:file:/C:/Users/Sanjay/.m2/repository/org/clojure/clojurescript/1.10.914/clojurescript-1.10.914.jar!/cljs/source_map/base64.clj",1641537100000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","reagent/impl/template.cljs","^7",1,"^8",5,"^9",1,"^:",26],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G"],"^H",["^ ","^I","^J","^K","^J","^L","^J","^M","^N","^O","^J","^P","^J","^Q","^J","^R","^J","~$$","^N"],"^S",["^T",[]],"~:shadow/js-access-properties",["^T",["createElement","Fragment"]],"^U","^V","^W",["^ "],"^Z",null,"^[",["^ ","^10","^10","^11","^12","^N","^N","^13","^13","^B","^C","^14","^14","^C","^C","^15","^15","^16","^16","^12","^12","^17","^10","^18","^13","^19","^1:","^1;","^16","^J","^J","^1:","^1:","^1<","^1<"],"^1=",["^T",["^1>"]],"~:shadow/js-access-global",["^T",["document","Error"]],"^1?",["^ ","^1@","^1<","^1A","^10"],"~:defs",["^ ","~$valid-tag?",["^ ","~:protocol-inline",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",33,"^8",16,"^9",33,"^:",26,"~:tag","~$boolean","~:arglists",["^1D",["~$quote",["^1D",[["~$x"]]]]]],"^U","^33","^6","reagent/impl/template.cljs","^:",26,"~:method-params",["^1D",[["~$x"]]],"~:protocol-impl",null,"~:arglists-meta",["^1D",[null,null]],"^8",1,"~:variadic?",false,"^7",33,"~:ret-tag","^6O","^9",33,"~:max-fixed-arity",1,"^6N","^6O","~:fn-var",true,"^6P",["^1D",["^6Q",["^1D",[["~$x"]]]]]],"~$adapt-react-class",["^ ","^6M",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",331,"^8",7,"^9",331,"^:",24,"^6P",["^1D",["^6Q",["^1D",[["~$c"]]]]]],"^U","^3K","^6","reagent/impl/template.cljs","^:",24,"^6R",["^1D",[["~$c"]]],"^6S",null,"^6T",["^1D",[null,null]],"^8",1,"^6U",false,"^7",331,"^6V","^3[","^9",331,"^6W",1,"^6X",true,"^6P",["^1D",["^6Q",["^1D",[["~$c"]]]]]],"~$has-selection-api?",["^ ","^6M",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",160,"^8",16,"^9",160,"^:",34,"^6N","^6O","^6P",["^1D",["^6Q",["^1D",[["~$input-type"]]]]]],"^U","^3O","^6","reagent/impl/template.cljs","^:",34,"^6R",["^1D",[["^6["]]],"^6S",null,"^6T",["^1D",[null,null]],"^8",1,"^6U",false,"^7",160,"^6V","^6O","^9",160,"^6W",1,"^6N","^6O","^6X",true,"^6P",["^1D",["^6Q",["^1D",[["^6["]]]]]],"~$str-coll",["^ ","^6M",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",361,"^8",7,"^9",361,"^:",15,"^6P",["^1D",["^6Q",["^1D",[["~$coll"]]]]]],"^U","^3P","^6","reagent/impl/template.cljs","^:",15,"^6R",["^1D",[["^71"]]],"^6S",null,"^6T",["^1D",[null,null]],"^8",1,"^6U",false,"^7",361,"^6V","^19","^9",361,"^6W",1,"^6X",true,"^6P",["^1D",["^6Q",["^1D",[["^71"]]]]]],"~$get-key",["^ ","^6M",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",306,"^8",7,"^9",306,"^:",14,"^6P",["^1D",["^6Q",["^1D",[["~$x"]]]]]],"^U","^3R","^6","reagent/impl/template.cljs","^:",14,"^6R",["^1D",[["~$x"]]],"^6S",null,"^6T",["^1D",[null,null]],"^8",1,"^6U",false,"^7",306,"^6V",["^T",["~$any","~$clj-nil"]],"^9",306,"^6W",1,"^6X",true,"^6P",["^1D",["^6Q",["^1D",[["~$x"]]]]]],"~$re-tag",["^ ","^5",["^ ","^6","reagent/impl/template.cljs","^7",18,"^8",3,"^9",18,"^:",9,"~:doc","Regular expression that parses a CSS-style id and class\n             from a tag name."],"^U","^3T","^6","reagent/impl/template.cljs","^:",9,"^8",1,"^7",16,"^9",18,"^6N","^73","^76","Regular expression that parses a CSS-style id and class\n             from a tag name."],"~$reag-element",["^ ","^6M",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",315,"^8",7,"^9",315,"^:",19,"^6P",["^1D",["^6Q",["^1D",[["~$tag","~$v"]]]]]],"^U","^3V","^6","reagent/impl/template.cljs","^:",19,"^6R",["^1D",[["^78","~$v"]]],"^6S",null,"^6T",["^1D",[null,null]],"^8",1,"^6U",false,"^7",315,"^6V","~$js","^9",315,"^6W",2,"^6X",true,"^6P",["^1D",["^6Q",["^1D",[["^78","~$v"]]]]]],"~$as-element",["^ ","^6M",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",407,"^8",7,"^9",407,"^:",17,"^6P",["^1D",["^6Q",["^1D",[["~$x"]]]]]],"^U","^4F","^6","reagent/impl/template.cljs","^:",17,"^6R",["^1D",[["~$x"]]],"^6S",null,"^6T",["^1D",[null,null]],"^8",1,"^6U",false,"^7",407,"^6V",["^T",[null,"^73","^79","^19"]],"^9",407,"^6W",1,"^6X",true,"^6P",["^1D",["^6Q",["^1D",[["~$x"]]]]]],"~$input-component?",["^ ","^6M",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",259,"^8",16,"^9",259,"^:",32,"^6N","^6O","^6P",["^1D",["^6Q",["^1D",[["~$x"]]]]]],"^U","^3;","^6","reagent/impl/template.cljs","^:",32,"^6R",["^1D",[["~$x"]]],"^6S",null,"^6T",["^1D",[null,null]],"^8",1,"^6U",false,"^7",259,"^6V","^6O","^9",259,"^6W",1,"^6N","^6O","^6X",true,"^6P",["^1D",["^6Q",["^1D",[["~$x"]]]]]],"~$NativeWrapper",["^ ","~:num-fields",0,"~:protocols",["^T",[]],"^U","^3[","^6","reagent/impl/template.cljs","^:",23,"~:type",true,"^8",10,"^7",20,"~:record",false,"^9",20,"^6N","~$function","~:skip-protocol-flag",null],"~$->NativeWrapper",["^ ","^6M",null,"^5",["^ ","^7>",["^T",[]],"^6","reagent/impl/template.cljs","^:",23,"^8",10,"~:factory","~:positional","^7",20,"^9",20,"^6P",["^1D",["^6Q",["^1D",[[]]]]],"^7B",null,"^76","Positional factory function for reagent.impl.template/NativeWrapper."],"^7>",["^T",[]],"^U","^40","^6","reagent/impl/template.cljs","^:",23,"^6R",["^1D",[[]]],"^6S",null,"^6T",["^1D",[null,null]],"^8",1,"^6U",false,"^7D","^7E","^7",20,"^6V","^3[","^9",20,"^6W",0,"^6X",true,"^6P",["^1D",["^6Q",["^1D",[[]]]]],"^7B",null,"^76","Positional factory function for reagent.impl.template/NativeWrapper."],"~$custom-kv-conv",["^ ","^6M",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",89,"^8",7,"^9",89,"^:",21,"^6P",["^1D",["^6Q",["^1D",[["~$o","~$k","~$v"]]]]]],"^U","^3>","^6","reagent/impl/template.cljs","^:",21,"^6R",["^1D",[["~$o","~$k","~$v"]]],"^6S",null,"^6T",["^1D",[null,null]],"^8",1,"^6U",false,"^7",89,"^9",89,"^6W",3,"^6X",true,"^6P",["^1D",["^6Q",["^1D",[["~$o","~$k","~$v"]]]]]],"~$input-render-setup",["^ ","^6M",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",234,"^8",7,"^9",234,"^:",25,"^6P",["^1D",["^6Q",["^1D",[["~$this","~$jsprops"]]]]]],"^U","^2U","^6","reagent/impl/template.cljs","^:",25,"^6R",["^1D",[["^7H","^7I"]]],"^6S",null,"^6T",["^1D",[null,null]],"^8",1,"^6U",false,"^7",234,"^6V",["^T",[null,"^74"]],"^9",234,"^6W",2,"^6X",true,"^6P",["^1D",["^6Q",["^1D",[["^7H","^7I"]]]]]],"~$input-component-set-value",["^ ","^6M",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",215,"^8",7,"^9",215,"^:",32,"^6P",["^1D",["^6Q",["^1D",[["^7H"]]]]]],"^U","^31","^6","reagent/impl/template.cljs","^:",32,"^6R",["^1D",[["^7H"]]],"^6S",null,"^6T",["^1D",[null,null]],"^8",1,"^6U",false,"^7",215,"^6V",["^T",["^73","^74"]],"^9",215,"^6W",1,"^6X",true,"^6P",["^1D",["^6Q",["^1D",[["^7H"]]]]]],"~$stringify-class",["^ ","^6M",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",129,"^8",7,"^9",129,"^:",22,"^6P",["^1D",["^6Q",["^1D",[[["^ ","~:keys",["~$class"],"^1F","~$props"]]]]]]],"^U","^3I","^6","reagent/impl/template.cljs","^:",22,"^6R",["^1D",[["~$p__36709"]]],"^6S",null,"^6T",["^1D",[null,null]],"^8",1,"^6U",false,"^7",129,"^6V",["^T",[null,"~$clj","^73"]],"^9",129,"^6W",1,"^6X",true,"^6P",["^1D",["^6Q",["^1D",[[["^ ","^7L",["^7M"],"^1F","^7N"]]]]]]],"~$oset",["^ ","^6M",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",103,"^8",7,"^9",103,"^:",11,"^6P",["^1D",["^6Q",["^1D",[["~$o","~$k","~$v"]]]]]],"^U","^3L","^6","reagent/impl/template.cljs","^:",11,"^6R",["^1D",[["~$o","~$k","~$v"]]],"^6S",null,"^6T",["^1D",[null,null]],"^8",1,"^6U",false,"^7",103,"^6V",["^T",[null,"~$object"]],"^9",103,"^6W",3,"^6X",true,"^6P",["^1D",["^6Q",["^1D",[["~$o","~$k","~$v"]]]]]],"~$oget",["^ ","^6M",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",107,"^8",7,"^9",107,"^:",11,"^6P",["^1D",["^6Q",["^1D",[["~$o","~$k"]]]]]],"^U","^2D","^6","reagent/impl/template.cljs","^:",11,"^6R",["^1D",[["~$o","~$k"]]],"^6S",null,"^6T",["^1D",[null,null]],"^8",1,"^6U",false,"^7",107,"^6V",["^T",["^73","^74"]],"^9",107,"^6W",2,"^6X",true,"^6P",["^1D",["^6Q",["^1D",[["~$o","~$k"]]]]]],"~$hiccup-tag?",["^ ","^6M",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",29,"^8",16,"^9",29,"^:",27,"^6N","^6O","^6P",["^1D",["^6Q",["^1D",[["~$x"]]]]]],"^U","^4B","^6","reagent/impl/template.cljs","^:",27,"^6R",["^1D",[["~$x"]]],"^6S",null,"^6T",["^1D",[null,null]],"^8",1,"^6U",false,"^7",29,"^6V","^6O","^9",29,"^6W",1,"^6N","^6O","^6X",true,"^6P",["^1D",["^6Q",["^1D",[["~$x"]]]]]],"~$set-id-class",["^ ","^6M",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",110,"^8",7,"^9",110,"^:",19,"^6P",["^1D",["^6Q",["^1D",[["^7N","~$id-class"]]]]],"^76","Takes the id and class from tag keyword, and adds them to the\n  other props. Parsed tag is JS object with :id and :class properties."],"^U","^4D","^6","reagent/impl/template.cljs","^:",19,"^6R",["^1D",[["^7N","^7V"]]],"^6S",null,"^6T",["^1D",[null,null]],"^8",1,"^6U",false,"^7",110,"^6V",["^T",[null,"^7P","^73"]],"^9",110,"^6W",2,"^6X",true,"^6P",["^1D",["^6Q",["^1D",[["^7N","^7V"]]]]],"^76","Takes the id and class from tag keyword, and adds them to the\n  other props. Parsed tag is JS object with :id and :class properties."],"~$tag-name-cache",["^ ","^U","^23","^6","reagent/impl/template.cljs","^7",338,"^8",1,"^9",338,"^:",20,"^5",["^ ","^6","reagent/impl/template.cljs","^7",338,"^8",6,"^9",338,"^:",20],"^6N","^7R"],"~$prop-name-cache",["^ ","^U","^29","^6","reagent/impl/template.cljs","^7",41,"^8",1,"^9",41,"^:",21,"^5",["^ ","^6","reagent/impl/template.cljs","^7",41,"^8",6,"^9",41,"^:",21],"^6N","^7R"],"~$input-node-set-value",["^ ","^6M",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",166,"^8",7,"^9",166,"^:",27,"^6P",["^1D",["^6Q",["^1D",[["~$node","~$rendered-value","~$dom-value","~$component",["^ ","^7L",["~$on-write"]]]]]]]],"^U","^45","^6","reagent/impl/template.cljs","^:",27,"^6R",["^1D",[["^7Z","^7[","^80","^81","~$p__36711"]]],"^6S",null,"^6T",["^1D",[null,null]],"^8",1,"^6U",false,"^7",166,"^6V",["^T",["^73","^74"]],"^9",166,"^6W",5,"^6X",true,"^6P",["^1D",["^6Q",["^1D",[["^7Z","^7[","^80","^81",["^ ","^7L",["^82"]]]]]]]],"~$convert-props",["^ ","^6M",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",141,"^8",7,"^9",141,"^:",20,"^6P",["^1D",["^6Q",["^1D",[["^7N","^7V"]]]]]],"^U","^49","^6","reagent/impl/template.cljs","^:",20,"^6R",["^1D",[["^7N","^7V"]]],"^6S",null,"^6T",["^1D",[null,null]],"^8",1,"^6U",false,"^7",141,"^6V",["^T",[null,"^73","^19","^7A"]],"^9",141,"^6W",2,"^6X",true,"^6P",["^1D",["^6Q",["^1D",[["^7N","^7V"]]]]]],"~$hiccup-err",["^ ","^6M",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",370,"^8",7,"^9",370,"^:",17,"^6P",["^1D",["^6Q",["^1D",[["~$v","~$&","~$msg"]]]]],"~:top-fn",["^ ","^6U",true,"~:fixed-arity",1,"^6W",1,"^6R",[["^1D",["~$v","^86"]]],"^6P",["^1D",[["~$v","~$&","^86"]]],"^6T",["^1D",[null]]]],"^U","^47","^6","reagent/impl/template.cljs","^:",17,"^87",["^ ","^6U",true,"^88",1,"^6W",1,"^6R",[["^1D",["~$v","^86"]]],"^6P",["^1D",[["~$v","~$&","^86"]]],"^6T",["^1D",[null]]],"^6R",[["^1D",["~$v","^86"]]],"^6S",null,"^88",1,"^6T",["^1D",[null]],"^8",1,"^6U",true,"~:methods",[["^ ","^88",1,"^6U",true,"^6N","^19"]],"^7",370,"^6V","^73","^9",370,"^6W",1,"^6X",true,"^6P",["^1D",[["~$v","~$&","^86"]]]],"~$custom-prop-name-cache",["^ ","^U","^3D","^6","reagent/impl/template.cljs","^7",79,"^8",1,"^9",79,"^:",28,"^5",["^ ","^6","reagent/impl/template.cljs","^7",79,"^8",6,"^9",79,"^:",28],"^6N","^7R"],"~$named?",["^ ","^6M",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",25,"^8",16,"^9",25,"^:",22,"^6N","^6O","^6P",["^1D",["^6Q",["^1D",[["~$x"]]]]]],"^U","^2I","^6","reagent/impl/template.cljs","^:",22,"^6R",["^1D",[["~$x"]]],"^6S",null,"^6T",["^1D",[null,null]],"^8",1,"^6U",false,"^7",25,"^6V","^6O","^9",25,"^6W",1,"^6N","^6O","^6X",true,"^6P",["^1D",["^6Q",["^1D",[["~$x"]]]]]],"~$parse-tag",["^ ","^6M",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",287,"^8",7,"^9",287,"^:",16,"^6P",["^1D",["^6Q",["^1D",[["~$hiccup-tag"]]]]]],"^U","^2F","^6","reagent/impl/template.cljs","^:",16,"^6R",["^1D",[["^8="]]],"^6S",null,"^6T",["^1D",[null,null]],"^8",1,"^6U",false,"^7",287,"^6V","^7R","^9",287,"^6W",1,"^6X",true,"^6P",["^1D",["^6Q",["^1D",[["^8="]]]]]],"~$kv-conv",["^ ","^6M",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",62,"^8",7,"^9",62,"^:",14,"^6P",["^1D",["^6Q",["^1D",[["~$o","~$k","~$v"]]]]]],"^U","^2G","^6","reagent/impl/template.cljs","^:",14,"^6R",["^1D",[["~$o","~$k","~$v"]]],"^6S",null,"^6T",["^1D",[null,null]],"^8",1,"^6U",false,"^7",62,"^9",62,"^6W",3,"^6X",true,"^6P",["^1D",["^6Q",["^1D",[["~$o","~$k","~$v"]]]]]],"~$key-from-vec",["^ ","^6M",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",310,"^8",7,"^9",310,"^:",19,"^6P",["^1D",["^6Q",["^1D",[["~$v"]]]]]],"^U","^2@","^6","reagent/impl/template.cljs","^:",19,"^6R",["^1D",[["~$v"]]],"^6S",null,"^6T",["^1D",[null,null]],"^8",1,"^6U",false,"^7",310,"^6V",["^T",["^73","^74"]],"^9",310,"^6W",1,"^6X",true,"^6P",["^1D",["^6Q",["^1D",[["~$v"]]]]]],"~$js-val?",["^ ","^6M",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",57,"^8",16,"^9",57,"^:",23,"^6N","^6O","^6P",["^1D",["^6Q",["^1D",[["~$x"]]]]]],"^U","^35","^6","reagent/impl/template.cljs","^:",23,"^6R",["^1D",[["~$x"]]],"^6S",null,"^6T",["^1D",[null,null]],"^8",1,"^6U",false,"^7",57,"^6V","^6O","^9",57,"^6W",1,"^6N","^6O","^6X",true,"^6P",["^1D",["^6Q",["^1D",[["~$x"]]]]]],"~$input-unmount",["^ ","^6M",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",256,"^8",7,"^9",256,"^:",20,"^6P",["^1D",["^6Q",["^1D",[["^7H"]]]]]],"^U","^4A","^6","reagent/impl/template.cljs","^:",20,"^6R",["^1D",[["^7H"]]],"^6S",null,"^6T",["^1D",[null,null]],"^8",1,"^6U",false,"^7",256,"^6V","^73","^9",256,"^6W",1,"^6X",true,"^6P",["^1D",["^6Q",["^1D",[["^7H"]]]]]],"~$convert-custom-prop-value",["^ ","^6M",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",94,"^8",7,"^9",94,"^:",32,"^6P",["^1D",["^6Q",["^1D",[["~$x"]]]]]],"^U","^4E","^6","reagent/impl/template.cljs","^:",32,"^6R",["^1D",[["~$x"]]],"^6S",null,"^6T",["^1D",[null,null]],"^8",1,"^6U",false,"^7",94,"^6V",["^T",[null,"^73","^19","^7A"]],"^9",94,"^6W",1,"^6X",true,"^6P",["^1D",["^6Q",["^1D",[["~$x"]]]]]],"~$reagent-input-class",["^ ","^U","^3=","^6","reagent/impl/template.cljs","^7",264,"^8",1,"^9",264,"^:",25,"^5",["^ ","^6","reagent/impl/template.cljs","^7",264,"^8",6,"^9",264,"^:",25],"^6N","^74"],"~$native-element",["^ ","^6M",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",345,"^8",7,"^9",345,"^:",21,"^6P",["^1D",["^6Q",["^1D",[["~$parsed","~$argv","~$first"]]]]]],"^U","^3X","^6","reagent/impl/template.cljs","^:",21,"^6R",["^1D",[["^8E","^8F","^8G"]]],"^6S",null,"^6T",["^1D",[null,null]],"^8",1,"^6U",false,"^7",345,"^6V","^73","^9",345,"^6W",3,"^6X",true,"^6P",["^1D",["^6Q",["^1D",[["^8E","^8F","^8G"]]]]]],"~$reagent-input",["^ ","^6M",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",278,"^8",7,"^9",278,"^:",20,"^6P",["^1D",["^6Q",["^1D",[[]]]]]],"^U","^1[","^6","reagent/impl/template.cljs","^:",20,"^6R",["^1D",[[]]],"^6S",null,"^6T",["^1D",[null,null]],"^8",1,"^6U",false,"^7",278,"^6V","^74","^9",278,"^6W",0,"^6X",true,"^6P",["^1D",["^6Q",["^1D",[[]]]]]],"~$fragment-element",["^ ","^6M",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",322,"^8",7,"^9",322,"^:",23,"^6P",["^1D",["^6Q",["^1D",[["^8F"]]]]]],"^U","^2R","^6","reagent/impl/template.cljs","^:",23,"^6R",["^1D",[["^8F"]]],"^6S",null,"^6T",["^1D",[null,null]],"^8",1,"^6U",false,"^7",322,"^6V","^73","^9",322,"^6W",1,"^6X",true,"^6P",["^1D",["^6Q",["^1D",[["^8F"]]]]]],"~$vec-to-elem",["^ ","^6M",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",373,"^8",7,"^9",373,"^:",18,"^6P",["^1D",["^6Q",["^1D",[["~$v"]]]]]],"^U","^24","^6","reagent/impl/template.cljs","^:",18,"^6R",["^1D",[["~$v"]]],"^6S",null,"^6T",["^1D",[null,null]],"^8",1,"^6U",false,"^7",373,"^6V",["^T",[null,"^73","^79"]],"^9",373,"^6W",1,"^6X",true,"^6P",["^1D",["^6Q",["^1D",[["~$v"]]]]]],"~$cache-get",["^ ","^6M",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",45,"^8",7,"^9",45,"^:",16,"^6P",["^1D",["^6Q",["^1D",[["~$o","~$k"]]]]]],"^U","^42","^6","reagent/impl/template.cljs","^:",16,"^6R",["^1D",[["~$o","~$k"]]],"^6S",null,"^6T",["^1D",[null,null]],"^8",1,"^6U",false,"^7",45,"^6V",["^T",["^73","^74"]],"^9",45,"^6W",2,"^6X",true,"^6P",["^1D",["^6Q",["^1D",[["~$o","~$k"]]]]]],"~$input-handle-change",["^ ","^6M",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",225,"^8",7,"^9",225,"^:",26,"^6P",["^1D",["^6Q",["^1D",[["^7H","~$on-change","~$e"]]]]]],"^U","^2:","^6","reagent/impl/template.cljs","^:",26,"^6R",["^1D",[["^7H","^8M","~$e"]]],"^6S",null,"^6T",["^1D",[null,null]],"^8",1,"^6U",false,"^7",225,"^6V","^73","^9",225,"^6W",3,"^6X",true,"^6P",["^1D",["^6Q",["^1D",[["^7H","^8M","~$e"]]]]]],"~$make-element",["^ ","^6M",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",472,"^8",7,"^9",472,"^:",19,"^6P",["^1D",["^6Q",["^1D",[["^8F","^11","^7I","~$first-child"]]]]]],"^U","^2C","^6","reagent/impl/template.cljs","^:",19,"^6R",["^1D",[["^8F","^11","^7I","^8O"]]],"^6S",null,"^6T",["^1D",[null,null]],"^8",1,"^6U",false,"^7",472,"^9",472,"^6W",4,"^6X",true,"^6P",["^1D",["^6Q",["^1D",[["^8F","^11","^7I","^8O"]]]]]],"~$input-spec",["^ ","^U","^2K","^6","reagent/impl/template.cljs","^7",268,"^8",1,"^9",268,"^:",16,"^5",["^ ","^6","reagent/impl/template.cljs","^7",268,"^8",6,"^9",268,"^:",16],"^6N","~$cljs.core/IMap"],"~$expand-seq-dev",["^ ","^6M",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",425,"^8",7,"^9",425,"^:",21,"^6P",["^1D",["^6Q",["^1D",[["~$s","~$o"]]]]]],"^U","^37","^6","reagent/impl/template.cljs","^:",21,"^6R",["^1D",[["~$s","~$o"]]],"^6S",null,"^6T",["^1D",[null,null]],"^8",1,"^6U",false,"^7",425,"^6V","~$array","^9",425,"^6W",2,"^6X",true,"^6P",["^1D",["^6Q",["^1D",[["~$s","~$o"]]]]]],"~$convert-prop-value",["^ ","^6M",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",67,"^8",7,"^9",67,"^:",25,"^6P",["^1D",["^6Q",["^1D",[["~$x"]]]]]],"^U","^2M","^6","reagent/impl/template.cljs","^:",25,"^6R",["^1D",[["~$x"]]],"^6S",null,"^6T",["^1D",[null,null]],"^8",1,"^6U",false,"^7",67,"^6V",["^T",[null,"^73","^19","^7A"]],"^9",67,"^6W",1,"^6X",true,"^6P",["^1D",["^6Q",["^1D",[["~$x"]]]]]],"~$cached-prop-name",["^ ","^6M",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",49,"^8",7,"^9",49,"^:",23,"^6P",["^1D",["^6Q",["^1D",[["~$k"]]]]]],"^U","^38","^6","reagent/impl/template.cljs","^:",23,"^6R",["^1D",[["~$k"]]],"^6S",null,"^6T",["^1D",[null,null]],"^8",1,"^6U",false,"^7",49,"^6V",["^T",[null,"^73","^74"]],"^9",49,"^6W",1,"^6X",true,"^6P",["^1D",["^6Q",["^1D",[["~$k"]]]]]],"~$cached-custom-prop-name",["^ ","^6M",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",81,"^8",7,"^9",81,"^:",30,"^6P",["^1D",["^6Q",["^1D",[["~$k"]]]]]],"^U","^3:","^6","reagent/impl/template.cljs","^:",30,"^6R",["^1D",[["~$k"]]],"^6S",null,"^6T",["^1D",[null,null]],"^8",1,"^6U",false,"^7",81,"^6V",["^T",[null,"^73","^74"]],"^9",81,"^6W",1,"^6X",true,"^6P",["^1D",["^6Q",["^1D",[["~$k"]]]]]],"~$these-inputs-have-selection-api",["^ ","^U","^3W","^6","reagent/impl/template.cljs","^7",157,"^8",1,"^9",157,"^:",37,"^5",["^ ","^6","reagent/impl/template.cljs","^7",157,"^8",6,"^9",157,"^:",37],"^6N","~$cljs.core/ISet"],"~$expand-seq",["^ ","^6M",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",419,"^8",7,"^9",419,"^:",17,"^6P",["^1D",["^6Q",["^1D",[["~$s"]]]]]],"^U","^26","^6","reagent/impl/template.cljs","^:",17,"^6R",["^1D",[["~$s"]]],"^6S",null,"^6T",["^1D",[null,null]],"^8",1,"^6U",false,"^7",419,"^6V","^8S","^9",419,"^6W",1,"^6X",true,"^6P",["^1D",["^6Q",["^1D",[["~$s"]]]]]],"~$expand-seq-check",["^ ","^6M",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",435,"^8",7,"^9",435,"^:",23,"^6P",["^1D",["^6Q",["^1D",[["~$x"]]]]]],"^U","^3B","^6","reagent/impl/template.cljs","^:",23,"^6R",["^1D",[["~$x"]]],"^6S",null,"^6T",["^1D",[null,null]],"^8",1,"^6U",false,"^7",435,"^6V",["^T",[null,"^73","^74"]],"^9",435,"^6W",1,"^6X",true,"^6P",["^1D",["^6Q",["^1D",[["~$x"]]]]]],"~$find-dom-node",["^ ","^U","^2;","^6","reagent/impl/template.cljs","^7",152,"^8",1,"^9",152,"^:",23,"^5",["^ ","^6","reagent/impl/template.cljs","^7",152,"^8",10,"^9",152,"^:",23],"^6N","^74"],"~$cached-parse",["^ ","^6M",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",340,"^8",7,"^9",340,"^:",19,"^6P",["^1D",["^6Q",["^1D",[["~$x"]]]]]],"^U","^3E","^6","reagent/impl/template.cljs","^:",19,"^6R",["^1D",[["~$x"]]],"^6S",null,"^6T",["^1D",[null,null]],"^8",1,"^6U",false,"^7",340,"^6V",["^T",["^73","^74"]],"^9",340,"^6W",1,"^6X",true,"^6P",["^1D",["^6Q",["^1D",[["~$x"]]]]]],"~$try-get-key",["^ ","^6M",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",300,"^8",7,"^9",300,"^:",18,"^6P",["^1D",["^6Q",["^1D",[["~$x"]]]]]],"^U","^30","^6","reagent/impl/template.cljs","^:",18,"^6R",["^1D",[["~$x"]]],"^6S",null,"^6T",["^1D",[null,null]],"^8",1,"^6U",false,"^7",300,"^9",300,"^6W",1,"^6X",true,"^6P",["^1D",["^6Q",["^1D",[["~$x"]]]]]]],"^1B",["^ ","^N","^N","^J","^J","^14","^14","^13","^13","^18","^13"],"~:cljs.analyzer/constants",["^ ","^1=",["^T",["~:key","~:else","~:component-did-update","~:<>","~:reagent-render","~:on-write","~:id","~:class","~:component-will-unmount","~:display-name"]],"~:order",["^94","^99","^9:","^98","^9<","^95","^9;","^97","^93","^96"]],"^1I",["^ ","^1>",["^T",[]]],"^1J",["^ "],"^1K",["^15","^14","^C","^1:","^1<","^10","^12","^16","^13","^N","^J"]],"^Y","^V","~:ns-specs",["^ "],"~:ns-spec-vars",["^T",[]],"~:compiler-options",["^4H",[["^9@","~:static-fns"],true,["^9@","~:shadow-tweaks"],null,["^9@","~:source-map-inline"],null,["^9@","~:elide-asserts"],false,["^9@","~:optimize-constants"],null,["^9@","^1P"],null,["^9@","~:external-config"],null,["^9@","~:tooling-config"],null,["^9@","~:emit-constants"],null,["^9@","~:load-tests"],null,["^9@","~:form-size-threshold"],null,["^9@","~:global-goog-object&array"],null,["^9@","~:data-readers"],null,["^9@","~:infer-externs"],"~:auto",["^9@","^1R"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^9@","~:fn-invoke-direct"],null,["^9@","~:source-map"],"/dev/null"]]]